<?xml version="1.0" encoding="UTF-8"?>
<tree type="Call tree comparison" threadSelection="All threads" threadStatus="Runnable" aggregation="Methods" differenceCalculation="Average call times">
  <node leaf="false" class="ProjectRunner" methodName="main" methodSignature="([Ljava/lang/String;)V" timeDelta="12403" timeBase="996446" countDelta="0" countBase="1">
    <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="main" methodSignature="([Ljava/lang/String;)V" timeDelta="13369" timeBase="955397" countDelta="0" countBase="1">
      <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="registerMBean" methodSignature="()V" timeDelta="10971" timeBase="69293" countDelta="0" countBase="1">
        <node leaf="true" class="java.lang.management.ManagementFactory" methodName="getPlatformMBeanServer" methodSignature="()Ljavax/management/MBeanServer;" timeDelta="10290" timeBase="63250" countDelta="0" countBase="1"/>
        <node leaf="true" class="javax.management.MBeanServer" methodName="registerMBean" methodSignature="(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;" timeDelta="673" timeBase="5999" countDelta="0" countBase="1"/>
        <node leaf="true" class="javax.management.ObjectName" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-4" timeBase="19" countDelta="0" countBase="1"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="init" methodSignature="([Ljava/lang/String;)I" timeDelta="2660" timeBase="592528" countDelta="0" countBase="1">
        <node leaf="true" class="javax.swing.JFrame" methodName="setVisible" methodSignature="(Z)V" timeDelta="11557" timeBase="89836" countDelta="0" countBase="1"/>
        <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="mas" methodSignature="()Ljason/mas2j/MAS2JProject;" timeDelta="4108" timeBase="23934" countDelta="0" countBase="1">
          <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="agents" methodSignature="()V" timeDelta="2870" timeBase="10459" countDelta="0" countBase="1">
            <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="agent" methodSignature="()V" timeDelta="2869" timeBase="10413" countDelta="0" countBase="1">
              <node leaf="false" class="jason.mas2j.AgentParameters" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="2212" timeBase="8072" countDelta="0" countBase="1">
                <node leaf="false" class="jason.mas2j.AgentParameters" methodName="setupDefault" methodSignature="()V" timeDelta="2203" timeBase="8050" countDelta="0" countBase="1">
                  <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="3" timeBase="6" countDelta="0" countBase="2"/>
                  <node leaf="false" class="jason.mas2j.ClassParameters" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="2" timeBase="3" countDelta="0" countBase="2">
                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                  </node>
                </node>
                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="3" timeBase="3" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.mas2j.AgentParameters" methodName="setOptions" methodSignature="(Ljava/util/Map;)V" timeDelta="5" timeBase="28" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="3" timeBase="15" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="ASoptions" methodSignature="()Ljava/util/Map;" timeDelta="2" timeBase="4" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="jj_consume_token" methodSignature="(I)Ljason/mas2j/parser/Token;" timeDelta="2" timeBase="11" countDelta="0" countBase="3">
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="5" timeBase="32" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="2" timeBase="12" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(J)I" timeDelta="1" timeBase="12" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJ)I" timeDelta="2" timeBase="10" countDelta="0" countBase="1"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="1" timeBase="6" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                      <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                    </node>
                    <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                  </node>
                  <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="8"/>
                </node>
              </node>
              <node leaf="false" class="jason.mas2j.AgentParameters" methodName="setSource" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="62" countDelta="0" countBase="1">
                <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                <node leaf="true" class="java.net.URI" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-2" timeBase="28" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="classDef" methodSignature="()Ljason/mas2j/ClassParameters;" timeDelta="1" timeBase="43" countDelta="0" countBase="1">
                <node leaf="true" class="jason.mas2j.parser.mas2j" methodName="jj_consume_token" methodSignature="(I)Ljason/mas2j/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              </node>
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="2" countDelta="0" countBase="2"/>
              <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="34" countDelta="0" countBase="1">
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="-1" timeBase="33" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                  <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="24" countDelta="0" countBase="1"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.mas2j.MAS2JProject" methodName="initAgMap" methodSignature="()V" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
            </node>
          </node>
          <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="sourcepath" methodSignature="()V" timeDelta="283" timeBase="3460" countDelta="0" countBase="1">
            <node leaf="false" class="jason.mas2j.MAS2JProject" methodName="addSourcePath" methodSignature="(Ljava/lang/String;)V" timeDelta="293" timeBase="3337" countDelta="0" countBase="1">
              <node leaf="false" class="jason.runtime.SourcePath" methodName="addPath" methodSignature="(Ljava/lang/String;)V" timeDelta="292" timeBase="3335" countDelta="0" countBase="1">
                <node leaf="true" class="java.lang.String" methodName="replaceAll" methodSignature="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" timeDelta="282" timeBase="3300" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.List" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="4" timeBase="5" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="2" timeBase="3" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                <node leaf="true" class="java.lang.String" methodName="substring" methodSignature="(II)Ljava/lang/String;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
              </node>
            </node>
            <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="11" timeBase="29" countDelta="0" countBase="1">
              <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="10" timeBase="28" countDelta="0" countBase="1">
                <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="3" timeBase="6" countDelta="0" countBase="3">
                  <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="4" countDelta="0" countBase="3"/>
                </node>
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="2" timeBase="4" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                  <node leaf="false" class="jason.mas2j.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/mas2j/parser/Token;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                    <node leaf="true" class="jason.mas2j.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="jj_consume_token" methodSignature="(I)Ljason/mas2j/parser/Token;" timeDelta="-5" timeBase="21" countDelta="0" countBase="4">
              <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="-7" timeBase="28" countDelta="0" countBase="3">
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="1" timeBase="3" countDelta="0" countBase="3">
                  <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="2" timeBase="0" countDelta="0" countBase="3"/>
                  <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                  <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                </node>
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-8" timeBase="20" countDelta="0" countBase="3">
                  <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-22" timeBase="57" countDelta="0" countBase="1">
                    <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="13"/>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.mas2j.MAS2JProject" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="158" timeBase="1568" countDelta="0" countBase="1">
            <node leaf="false" class="jason.mas2j.ClassParameters" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="5" timeBase="14" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
            </node>
            <node leaf="false" class="jason.runtime.SourcePath" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            </node>
            <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
          </node>
          <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="jj_consume_token" methodSignature="(I)Ljason/mas2j/parser/Token;" timeDelta="83" timeBase="660" countDelta="0" countBase="4">
            <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="107" timeBase="876" countDelta="0" countBase="3">
              <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="22" timeBase="45" countDelta="0" countBase="4">
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="73" timeBase="124" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" timeDelta="2" timeBase="1" countDelta="0" countBase="29"/>
                  <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjAddStates" methodSignature="(II)V" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                  <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                </node>
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(J)I" timeDelta="4" timeBase="26" countDelta="0" countBase="2">
                  <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJ)I" timeDelta="3" timeBase="23" countDelta="0" countBase="2">
                    <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJ)I" timeDelta="-1" timeBase="36" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-3" timeBase="33" countDelta="0" countBase="1"/>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              </node>
              <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="21" timeBase="237" countDelta="0" countBase="10">
                <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="20" timeBase="235" countDelta="0" countBase="10">
                  <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" timeDelta="3" timeBase="94" countDelta="0" countBase="1">
                    <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" timeDelta="3" timeBase="92" countDelta="0" countBase="1"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="4" timeBase="13" countDelta="0" countBase="3">
                <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="4" timeBase="8" countDelta="0" countBase="1">
                  <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
                </node>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="infra" methodSignature="()V" timeDelta="13" timeBase="143" countDelta="0" countBase="1">
            <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="7" timeBase="60" countDelta="0" countBase="1">
              <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="6" timeBase="59" countDelta="0" countBase="1">
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="6" timeBase="43" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(J)I" timeDelta="6" timeBase="42" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJ)I" timeDelta="7" timeBase="40" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa3_0" methodSignature="(JJ)I" timeDelta="5" timeBase="37" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa4_0" methodSignature="(JJ)I" timeDelta="4" timeBase="34" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="3" timeBase="2" countDelta="0" countBase="1">
                            <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" timeDelta="2" timeBase="1" countDelta="0" countBase="1"/>
                          </node>
                          <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa5_0" methodSignature="(JJ)I" timeDelta="1" timeBase="28" countDelta="0" countBase="1">
                            <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="classDef" methodSignature="()Ljason/mas2j/ClassParameters;" timeDelta="6" timeBase="69" countDelta="0" countBase="1">
              <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="2" timeBase="29" countDelta="0" countBase="2">
                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/mas2j/parser/Token;" timeDelta="1" timeBase="29" countDelta="0" countBase="2">
                  <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="2" timeBase="18" countDelta="0" countBase="2">
                    <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="1" timeBase="16" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                    </node>
                    <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(J)I" timeDelta="1" timeBase="19" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJ)I" timeDelta="2" timeBase="17" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa3_0" methodSignature="(JJ)I" timeDelta="2" timeBase="16" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa4_0" methodSignature="(JJ)I" timeDelta="1" timeBase="15" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa5_0" methodSignature="(JJ)I" timeDelta="2" timeBase="13" countDelta="0" countBase="1">
                              <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="3" timeBase="2" countDelta="0" countBase="1">
                                <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                              </node>
                              <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa6_0" methodSignature="(JJ)I" timeDelta="1" timeBase="9" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa7_0" methodSignature="(JJ)I" timeDelta="1" timeBase="8" countDelta="0" countBase="1">
                                  <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="jjMoveStringLiteralDfa8_0" methodSignature="(JJ)I" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                          </node>
                          <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="true" class="jason.mas2j.parser.mas2j" methodName="jj_consume_token" methodSignature="(I)Ljason/mas2j/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
            </node>
            <node leaf="true" class="jason.mas2j.MAS2JProject" methodName="setInfrastructure" methodSignature="(Ljason/mas2j/ClassParameters;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          </node>
          <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="environment" methodSignature="()V" timeDelta="1" timeBase="168" countDelta="0" countBase="1">
            <node leaf="true" class="jason.mas2j.MAS2JProject" methodName="setEnvClass" methodSignature="(Ljason/mas2j/ClassParameters;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          </node>
          <node leaf="true" class="jason.mas2j.MAS2JProject" methodName="setSocName" methodSignature="(Ljava/lang/String;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          <node leaf="false" class="jason.mas2j.MAS2JProject" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-3" timeBase="103" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="2" timeBase="77" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-4" timeBase="15" countDelta="0" countBase="1"/>
          </node>
        </node>
        <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;)V" timeDelta="1299" timeBase="9593" countDelta="0" countBase="1">
          <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;)V" timeDelta="1298" timeBase="9588" countDelta="0" countBase="1">
            <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;II)V" timeDelta="14" timeBase="70" countDelta="0" countBase="1">
              <node leaf="false" class="jason.mas2j.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;III)V" timeDelta="9" timeBase="62" countDelta="0" countBase="1">
                <node leaf="true" class="jason.mas2j.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;III)V" timeDelta="4" timeBase="34" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.io.InputStreamReader" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;)V" timeDelta="4" timeBase="24" countDelta="0" countBase="1"/>
              </node>
            </node>
            <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="2" timeBase="33" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.mas2j.parser.Token" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.mas2j.parser.mas2jTokenManager" methodName="&lt;init&gt;" methodSignature="(Ljason/mas2j/parser/SimpleCharStream;)V" timeDelta="1" timeBase="11" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="1098" timeBase="13677" countDelta="0" countBase="1">
          <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="10" timeBase="52" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="3" timeBase="8" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.asSyntax.directives.DirectiveProcessor" methodName="registerDirective" methodSignature="(Ljava/lang/String;Ljava/lang/Class;)V" timeDelta="1" timeBase="5" countDelta="0" countBase="12"/>
          <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="createButtons" methodSignature="()V" timeDelta="227" timeBase="10896" countDelta="0" countBase="1">
          <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="createStopButton" methodSignature="()V" timeDelta="467" timeBase="1498" countDelta="0" countBase="1">
            <node leaf="true" class="javax.swing.JButton" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljavax/swing/Icon;)V" timeDelta="154" timeBase="655" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.Class" methodName="getResource" methodSignature="(Ljava/lang/String;)Ljava/net/URL;" timeDelta="120" timeBase="154" countDelta="0" countBase="1"/>
            <node leaf="true" class="javax.swing.ImageIcon" methodName="&lt;init&gt;" methodSignature="(Ljava/net/URL;)V" timeDelta="25" timeBase="77" countDelta="0" countBase="1"/>
            <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="addButton" methodSignature="(Ljavax/swing/JButton;)V" timeDelta="24" timeBase="78" countDelta="0" countBase="1">
              <node leaf="true" class="javax.swing.JPanel" methodName="revalidate" methodSignature="()V" timeDelta="17" timeBase="32" countDelta="0" countBase="1"/>
              <node leaf="true" class="javax.swing.JPanel" methodName="add" methodSignature="(Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="7" timeBase="46" countDelta="0" countBase="1"/>
            </node>
            <node leaf="true" class="javax.swing.JButton" methodName="addActionListener" methodSignature="(Ljava/awt/event/ActionListener;)V" timeDelta="2" timeBase="7" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$6" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;)V" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.runtime.MASConsoleGUI" methodName="get" methodSignature="()Ljason/runtime/MASConsoleGUI;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="createPauseButton" methodSignature="()V" timeDelta="367" timeBase="953" countDelta="0" countBase="1">
            <node leaf="true" class="javax.swing.JButton" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljavax/swing/Icon;)V" timeDelta="62" timeBase="136" countDelta="0" countBase="1"/>
            <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="addButton" methodSignature="(Ljavax/swing/JButton;)V" timeDelta="42" timeBase="73" countDelta="0" countBase="1">
              <node leaf="true" class="javax.swing.JPanel" methodName="add" methodSignature="(Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="26" timeBase="49" countDelta="0" countBase="1"/>
              <node leaf="true" class="javax.swing.JPanel" methodName="revalidate" methodSignature="()V" timeDelta="15" timeBase="22" countDelta="0" countBase="1"/>
            </node>
            <node leaf="true" class="java.lang.Class" methodName="getResource" methodSignature="(Ljava/lang/String;)Ljava/net/URL;" timeDelta="18" timeBase="142" countDelta="0" countBase="1"/>
            <node leaf="true" class="javax.swing.ImageIcon" methodName="&lt;init&gt;" methodSignature="(Ljava/net/URL;)V" timeDelta="15" timeBase="51" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$5" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;Ljavax/swing/JButton;)V" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.runtime.MASConsoleGUI" methodName="get" methodSignature="()Ljason/runtime/MASConsoleGUI;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            <node leaf="true" class="javax.swing.JButton" methodName="addActionListener" methodSignature="(Ljava/awt/event/ActionListener;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="createNewReplAgButton" methodSignature="()V" timeDelta="279" timeBase="1669" countDelta="0" countBase="1">
            <node leaf="true" class="javax.swing.JButton" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljavax/swing/Icon;)V" timeDelta="29" timeBase="129" countDelta="0" countBase="1"/>
            <node leaf="true" class="javax.swing.ImageIcon" methodName="&lt;init&gt;" methodSignature="(Ljava/net/URL;)V" timeDelta="9" timeBase="34" countDelta="0" countBase="1"/>
            <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="addButton" methodSignature="(Ljavax/swing/JButton;)V" timeDelta="6" timeBase="75" countDelta="0" countBase="1">
              <node leaf="true" class="javax.swing.JPanel" methodName="revalidate" methodSignature="()V" timeDelta="5" timeBase="25" countDelta="0" countBase="1"/>
              <node leaf="true" class="javax.swing.JPanel" methodName="add" methodSignature="(Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="2" timeBase="48" countDelta="0" countBase="1"/>
            </node>
            <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$7" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;Ljavax/swing/JButton;)V" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
            <node leaf="true" class="javax.swing.JButton" methodName="addActionListener" methodSignature="(Ljava/awt/event/ActionListener;)V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.Class" methodName="getResource" methodSignature="(Ljava/lang/String;)Ljava/net/URL;" timeDelta="-5" timeBase="272" countDelta="0" countBase="1"/>
          </node>
          <node leaf="true" class="javax.swing.JButton" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljavax/swing/Icon;)V" timeDelta="74" timeBase="142" countDelta="0" countBase="4"/>
          <node leaf="true" class="javax.swing.ImageIcon" methodName="&lt;init&gt;" methodSignature="(Ljava/net/URL;)V" timeDelta="25" timeBase="54" countDelta="0" countBase="4"/>
          <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="addButton" methodSignature="(Ljavax/swing/JButton;)V" timeDelta="24" timeBase="75" countDelta="0" countBase="4">
            <node leaf="true" class="javax.swing.JPanel" methodName="add" methodSignature="(Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="17" timeBase="49" countDelta="0" countBase="4"/>
            <node leaf="true" class="javax.swing.JPanel" methodName="revalidate" methodSignature="()V" timeDelta="7" timeBase="24" countDelta="0" countBase="4"/>
          </node>
          <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$1" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;)V" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$2" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;)V" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$3" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;)V" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$4" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;)V" timeDelta="1" timeBase="11" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.Class" methodName="getResource" methodSignature="(Ljava/lang/String;)Ljava/net/URL;" timeDelta="-557" timeBase="799" countDelta="0" countBase="4"/>
        </node>
        <node leaf="false" class="jason.mas2j.MAS2JProject" methodName="fixAgentsSrc" methodSignature="()V" timeDelta="139" timeBase="3059" countDelta="0" countBase="1">
          <node leaf="false" class="jason.runtime.SourcePath" methodName="fixPath" methodSignature="(Ljava/lang/String;)Ljava/lang/String;" timeDelta="101" timeBase="635" countDelta="0" countBase="1">
            <node leaf="true" class="java.lang.String" methodName="replaceAll" methodSignature="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" timeDelta="52" timeBase="281" countDelta="0" countBase="1"/>
            <node leaf="false" class="jason.runtime.SourcePath" methodName="testURLSrc" methodSignature="(Ljava/lang/String;)Z" timeDelta="13" timeBase="135" countDelta="0" countBase="2">
              <node leaf="true" class="java.net.URL" methodName="openStream" methodSignature="()Ljava/io/InputStream;" timeDelta="13" timeBase="108" countDelta="0" countBase="2"/>
              <node leaf="true" class="java.net.URL" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="2" timeBase="22" countDelta="0" countBase="2"/>
              <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
            </node>
            <node leaf="true" class="java.lang.String" methodName="substring" methodSignature="(I)Ljava/lang/String;" timeDelta="11" timeBase="5" countDelta="0" countBase="1"/>
            <node leaf="false" class="jason.runtime.SourcePath" methodName="getPaths" methodSignature="()Ljava/util/List;" timeDelta="1" timeBase="22" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
              <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
            </node>
            <node leaf="true" class="java.io.File" methodName="exists" methodSignature="()Z" timeDelta="1" timeBase="22" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
            <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          </node>
          <node leaf="false" class="jason.mas2j.AgentParameters" methodName="setSource" methodSignature="(Ljava/lang/String;)V" timeDelta="10" timeBase="16" countDelta="0" countBase="1">
            <node leaf="true" class="java.net.URI" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="14" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          </node>
          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="5" timeBase="1" countDelta="0" countBase="2"/>
          <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="3" timeBase="4" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="3" countDelta="0" countBase="1"/>
        </node>
        <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="setAsDefaultOut" methodSignature="()V" timeDelta="121" timeBase="1584" countDelta="0" countBase="1">
          <node leaf="false" class="jason.runtime.OutputStreamAdapter" methodName="&lt;init&gt;" methodSignature="(Ljason/runtime/MASConsoleGUI;Ljavax/swing/JTextArea;)V" timeDelta="2" timeBase="57" countDelta="0" countBase="1">
            <node leaf="true" class="java.io.PrintStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/OutputStream;)V" timeDelta="1" timeBase="41" countDelta="0" countBase="1"/>
          </node>
          <node leaf="false" class="jason.runtime.OutputStreamAdapter" methodName="setAsDefaultOut" methodSignature="()V" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
            <node leaf="true" class="java.lang.System" methodName="setOut" methodSignature="(Ljava/io/PrintStream;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="1"/>
          </node>
        </node>
        <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="setTitle" methodSignature="(Ljava/lang/String;)V" timeDelta="51" timeBase="147" countDelta="0" countBase="1">
          <node leaf="true" class="javax.swing.JFrame" methodName="setTitle" methodSignature="(Ljava/lang/String;)V" timeDelta="50" timeBase="146" countDelta="0" countBase="1"/>
        </node>
        <node leaf="false" class="jason.util.Config" methodName="get" methodSignature="()Ljason/util/Config;" timeDelta="39" timeBase="806" countDelta="0" countBase="1">
          <node leaf="false" class="jason.util.Config" methodName="get" methodSignature="(Z)Ljason/util/Config;" timeDelta="38" timeBase="805" countDelta="0" countBase="1">
            <node leaf="false" class="jason.util.Config" methodName="load" methodSignature="()Z" timeDelta="38" timeBase="698" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.Properties" methodName="load" methodSignature="(Ljava/io/InputStream;)V" timeDelta="23" timeBase="172" countDelta="0" countBase="1"/>
              <node leaf="false" class="jason.util.Config" methodName="getUserConfFile" methodSignature="()Ljava/io/File;" timeDelta="17" timeBase="65" countDelta="0" countBase="1">
                <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="3" timeBase="4" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.lang.System" methodName="getProperties" methodSignature="()Ljava/util/Properties;" timeDelta="2" timeBase="5" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.io.File" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="7" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-3" timeBase="5" countDelta="0" countBase="1"/>
              </node>
              <node leaf="true" class="jason.util.Config" methodName="getLocalConfFile" methodSignature="()Ljava/io/File;" timeDelta="6" timeBase="25" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.io.File" methodName="exists" methodSignature="()Z" timeDelta="5" timeBase="59" countDelta="0" countBase="2"/>
              <node leaf="true" class="java.io.FileInputStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/File;)V" timeDelta="-18" timeBase="304" countDelta="0" countBase="1"/>
            </node>
            <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="5" timeBase="15" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="2" timeBase="38" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="1" timeBase="21" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="-1" timeBase="9" countDelta="0" countBase="1"/>
          </node>
        </node>
        <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="28" timeBase="1201" countDelta="0" countBase="2"/>
        <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="getDirective" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/directives/Directive;" timeDelta="11" timeBase="465" countDelta="0" countBase="1">
          <node leaf="false" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="19" timeBase="93" countDelta="0" countBase="1">
            <node leaf="false" class="jason.asSyntax.directives.Include" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="15" timeBase="56" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="19" timeBase="39" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-3" timeBase="10" countDelta="0" countBase="1"/>
            </node>
            <node leaf="true" class="jason.asSyntax.directives.DefaultDirective" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
          </node>
          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="2" timeBase="3" countDelta="0" countBase="2"/>
          <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="-15" timeBase="348" countDelta="0" countBase="1"/>
        </node>
        <node leaf="false" class="jason.runtime.SourcePath" methodName="fixPath" methodSignature="(Ljava/lang/String;)Ljava/lang/String;" timeDelta="9" timeBase="133" countDelta="0" countBase="1">
          <node leaf="false" class="jason.runtime.SourcePath" methodName="testURLSrc" methodSignature="(Ljava/lang/String;)Z" timeDelta="6" timeBase="73" countDelta="0" countBase="1">
            <node leaf="true" class="java.net.URL" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="6" timeBase="66" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
          </node>
          <node leaf="true" class="java.io.File" methodName="exists" methodSignature="()Z" timeDelta="2" timeBase="25" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.io.File" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="11" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
        </node>
        <node leaf="false" class="jason.mas2j.MAS2JProject" methodName="registerDirectives" methodSignature="()V" timeDelta="6" timeBase="13" countDelta="0" countBase="1">
          <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" timeDelta="3" timeBase="6" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="2" timeBase="4" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
        </node>
        <node leaf="true" class="jason.mas2j.MAS2JProject" methodName="getSocName" methodSignature="()Ljava/lang/String;" timeDelta="5" timeBase="1" countDelta="0" countBase="1"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="5" timeBase="2" countDelta="0" countBase="1"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="2" timeBase="3" countDelta="0" countBase="1"/>
        <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS" methodName="parseArgs" methodSignature="([Ljava/lang/String;)Ljava/util/Map;" timeDelta="1" timeBase="46" countDelta="0" countBase="1"/>
        <node leaf="true" class="jason.mas2j.MAS2JProject" methodName="setupDefault" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
        <node leaf="false" class="jason.mas2j.parser.mas2j" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="1" timeBase="16" countDelta="0" countBase="1">
          <node leaf="true" class="jason.mas2j.parser.mas2j" methodName="jj_la1_init_1" methodSignature="()V" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.mas2j.parser.mas2j" methodName="jj_la1_init_0" methodSignature="()V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
        </node>
        <node leaf="true" class="jason.runtime.MASConsoleGUI" methodName="hasConsole" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
        <node leaf="true" class="jason.runtime.SourcePath" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="20" countDelta="0" countBase="1"/>
        <node leaf="true" class="jason.runtime.SourcePath" methodName="addPath" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
        <node leaf="true" class="java.io.PrintStream" methodName="flush" methodSignature="()V" timeDelta="1" timeBase="10" countDelta="0" countBase="2"/>
        <node leaf="true" class="java.lang.Boolean" methodName="valueOf" methodSignature="(Z)Ljava/lang/Boolean;" timeDelta="1" timeBase="26" countDelta="0" countBase="1"/>
        <node leaf="true" class="java.net.URL" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="16" countDelta="0" countBase="1"/>
        <node leaf="true" class="jason.runtime.MASConsoleGUI" methodName="get" methodSignature="()Ljason/runtime/MASConsoleGUI;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
        <node leaf="true" class="jason.runtime.MASConsoleGUI" methodName="getFrame" methodSignature="()Ljavax/swing/JFrame;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
        <node leaf="true" class="jason.util.Config" methodName="getJasonJar" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="14" countDelta="0" countBase="1"/>
        <node leaf="true" class="java.lang.Object" methodName="getClass" methodSignature="()Ljava/lang/Class;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
        <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-2" timeBase="11" countDelta="0" countBase="1"/>
        <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-8" timeBase="14" countDelta="0" countBase="1"/>
        <node leaf="true" class="java.net.URL" methodName="openStream" methodSignature="()Ljava/io/InputStream;" timeDelta="-13" timeBase="576" countDelta="0" countBase="1"/>
        <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="setupLogger" methodSignature="(Ljava/lang/String;)V" timeDelta="-24" timeBase="2397" countDelta="0" countBase="1">
          <node leaf="true" class="java.util.logging.LogManager" methodName="readConfiguration" methodSignature="(Ljava/io/InputStream;)V" timeDelta="5" timeBase="357" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.io.File" methodName="exists" methodSignature="()Z" timeDelta="1" timeBase="32" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.io.File" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="1"/>
          <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="getDefaultLogProperties" methodSignature="()Ljava/io/InputStream;" timeDelta="-29" timeBase="1966" countDelta="0" countBase="1">
            <node leaf="true" class="java.lang.Class" methodName="getResource" methodSignature="(Ljava/lang/String;)Ljava/net/URL;" timeDelta="-7" timeBase="449" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.net.URL" methodName="openStream" methodSignature="()Ljava/io/InputStream;" timeDelta="-24" timeBase="1512" countDelta="0" countBase="1"/>
          </node>
        </node>
        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-30" timeBase="30" countDelta="-1" countBase="1"/>
        <node leaf="false" class="java.util.logging.Logger" methodName="getHandlers" methodSignature="()[Ljava/util/logging/Handler;" timeDelta="-17015" timeBase="419317" countDelta="0" countBase="1">
          <node leaf="false" class="jason.runtime.MASConsoleLogHandler" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="4" timeBase="32" countDelta="0" countBase="1">
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="0" countDelta="0" countBase="6"/>
            <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="2" countDelta="0" countBase="3"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
          </node>
          <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="2" timeBase="26" countDelta="0" countBase="1">
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="3" timeBase="2" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
          </node>
          <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="get" methodSignature="()Ljason/runtime/MASConsoleGUI;" timeDelta="-17066" timeBase="413300" countDelta="0" countBase="1">
            <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-17066" timeBase="413297" countDelta="0" countBase="1">
              <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="initButtonPanel" methodSignature="()V" timeDelta="146" timeBase="6928" countDelta="0" countBase="1">
                <node leaf="true" class="javax.swing.ImageIcon" methodName="&lt;init&gt;" methodSignature="(Ljava/net/URL;)V" timeDelta="81" timeBase="3934" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.lang.Class" methodName="getResource" methodSignature="(Ljava/lang/String;)Ljava/net/URL;" timeDelta="9" timeBase="247" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JButton" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljavax/swing/Icon;)V" timeDelta="4" timeBase="150" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JButton" methodName="addActionListener" methodSignature="(Ljava/awt/event/ActionListener;)V" timeDelta="1" timeBase="7" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JPanel" methodName="setLayout" methodSignature="(Ljava/awt/LayoutManager;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.awt.Container" methodName="add" methodSignature="(Ljava/lang/String;Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="-1" timeBase="14" countDelta="0" countBase="1"/>
                <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="addButton" methodSignature="(Ljavax/swing/JButton;)V" timeDelta="-6" timeBase="90" countDelta="0" countBase="1">
                  <node leaf="true" class="javax.swing.JPanel" methodName="add" methodSignature="(Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="1" timeBase="17" countDelta="0" countBase="1"/>
                  <node leaf="true" class="javax.swing.JPanel" methodName="revalidate" methodSignature="()V" timeDelta="-6" timeBase="67" countDelta="0" countBase="1"/>
                </node>
              </node>
              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
              <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="initMainPanel" methodSignature="()V" timeDelta="-16" timeBase="129" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.logging.LogManager" methodName="getLogManager" methodSignature="()Ljava/util/logging/LogManager;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.awt.BorderLayout" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.logging.LogManager" methodName="getProperty" methodSignature="(Ljava/lang/String;)Ljava/lang/String;" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.awt.Container" methodName="add" methodSignature="(Ljava/lang/String;Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="-3" timeBase="27" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JPanel" methodName="&lt;init&gt;" methodSignature="(Ljava/awt/LayoutManager;)V" timeDelta="-13" timeBase="77" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="initOutput" methodSignature="()V" timeDelta="-230" timeBase="38025" countDelta="0" countBase="1">
                <node leaf="true" class="javax.swing.JTextArea" methodName="getCaret" methodSignature="()Ljavax/swing/text/Caret;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JTextArea" methodName="setEditable" methodSignature="(Z)V" timeDelta="-1" timeBase="137" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JPanel" methodName="add" methodSignature="(Ljava/lang/String;Ljava/awt/Component;)Ljava/awt/Component;" timeDelta="-2" timeBase="34" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.text.DefaultCaret" methodName="setUpdatePolicy" methodSignature="(I)V" timeDelta="-10" timeBase="14" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JTextArea" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-93" timeBase="23863" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JScrollPane" methodName="&lt;init&gt;" methodSignature="(Ljava/awt/Component;)V" timeDelta="-173" timeBase="12186" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="initFrame" methodSignature="(Ljava/lang/String;)V" timeDelta="-16967" timeBase="368195" countDelta="0" countBase="1">
                <node leaf="true" class="java.awt.BorderLayout" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JFrame" methodName="getContentPane" methodSignature="()Ljava/awt/Container;" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.awt.Container" methodName="setLayout" methodSignature="(Ljava/awt/LayoutManager;)V" timeDelta="-2" timeBase="16" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JFrame" methodName="setBounds" methodSignature="(IIII)V" timeDelta="-3" timeBase="40" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JFrame" methodName="addWindowListener" methodSignature="(Ljava/awt/event/WindowListener;)V" timeDelta="-71" timeBase="1085" countDelta="0" countBase="1"/>
                <node leaf="true" class="javax.swing.JFrame" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-16291" timeBase="283094" countDelta="0" countBase="1"/>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="659" timeBase="5272" countDelta="0" countBase="1">
        <node leaf="false" class="jason.infra.centralised.CentralisedRuntimeServices" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="34" timeBase="75" countDelta="0" countBase="1">
          <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="29" timeBase="58" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="4" timeBase="8" countDelta="0" countBase="1"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.CentralisedRuntimeServices" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/BaseCentralisedMAS;)V" timeDelta="12" timeBase="86" countDelta="0" countBase="1">
          <node leaf="false" class="jason.infra.centralised.BaseRuntimeServices" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/BaseCentralisedMAS;)V" timeDelta="4" timeBase="82" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="2" timeBase="4" countDelta="0" countBase="1"/>
          </node>
        </node>
        <node leaf="true" class="jason.runtime.RuntimeServicesFactory" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
        <node leaf="true" class="jason.runtime.RuntimeServicesFactory" methodName="set" methodSignature="(Ljason/runtime/RuntimeServices;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
        <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-6" timeBase="50" countDelta="0" countBase="1">
          <node leaf="true" class="javax.management.NotificationBroadcasterSupport" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="14" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.util.concurrent.ConcurrentHashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-4" timeBase="9" countDelta="0" countBase="1"/>
        </node>
      </node>
      <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="start" methodSignature="()V" timeDelta="15" timeBase="204" countDelta="0" countBase="1">
        <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="startAgs" methodSignature="()V" timeDelta="12" timeBase="198" countDelta="0" countBase="1">
          <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="createAgsThreads" methodSignature="()V" timeDelta="5" timeBase="182" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="4" timeBase="7" countDelta="0" countBase="2"/>
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="setThread" methodSignature="(Ljava/lang/Thread;)V" timeDelta="2" timeBase="8" countDelta="0" countBase="1">
              <node leaf="true" class="java.lang.Thread" methodName="setName" methodSignature="(Ljava/lang/String;)V" timeDelta="2" timeBase="7" countDelta="0" countBase="1"/>
            </node>
            <node leaf="true" class="java.lang.Thread" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/Runnable;)V" timeDelta="2" timeBase="17" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getCyclesSense" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="setCyclesSense" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            <node leaf="true" class="jason.mas2j.ClassParameters" methodName="hasParameters" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.mas2j.MAS2JProject" methodName="getInfrastructure" methodSignature="()Ljason/mas2j/ClassParameters;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
            <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="4" countDelta="0" countBase="2"/>
            <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" timeDelta="1" timeBase="2" countDelta="0" countBase="2"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getCyclesDeliberate" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="setControlInfraTier" methodSignature="(Ljason/infra/centralised/CentralisedExecutionControl;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="setCyclesAct" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="setCyclesDeliberate" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="startThread" methodSignature="()V" timeDelta="-2" timeBase="87" countDelta="0" countBase="1">
              <node leaf="true" class="java.lang.Thread" methodName="start" methodSignature="()V" timeDelta="-1" timeBase="85" countDelta="0" countBase="1"/>
            </node>
          </node>
          <node leaf="false" class="jason.mas2j.ClassParameters" methodName="hasParameter" methodSignature="(Ljava/lang/String;)Z" timeDelta="1" timeBase="1" countDelta="0" countBase="4">
            <node leaf="true" class="java.util.List" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="2" timeBase="0" countDelta="0" countBase="4"/>
          </node>
        </node>
        <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS" methodName="startSyncMode" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="waitEnd" methodSignature="()V" timeDelta="-243" timeBase="3213" countDelta="0" countBase="1">
        <node leaf="true" class="java.lang.Thread" methodName="sleep" methodSignature="(J)V" timeDelta="1" timeBase="5" countDelta="-1" countBase="33"/>
        <node leaf="true" class="java.io.File" methodName="exists" methodSignature="()Z" timeDelta="-7" timeBase="83" countDelta="-1" countBase="34"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="create" methodSignature="()V" timeDelta="-697" timeBase="284868" countDelta="0" countBase="1">
        <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="createEnvironment" methodSignature="()V" timeDelta="292" timeBase="22620" countDelta="0" countBase="1">
          <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="&lt;init&gt;" methodSignature="(Ljason/mas2j/ClassParameters;Ljason/infra/centralised/BaseCentralisedMAS;)V" timeDelta="53" timeBase="20927" countDelta="0" countBase="1">
            <node leaf="false" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="262" timeBase="8949" countDelta="0" countBase="1">
              <node leaf="false" class="jason.environment.Environment" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="276" timeBase="8866" countDelta="0" countBase="1">
                <node leaf="false" class="jason.environment.Environment" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="275" timeBase="8861" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.concurrent.Executors" methodName="newFixedThreadPool" methodSignature="(I)Ljava/util/concurrent/ExecutorService;" timeDelta="235" timeBase="8484" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.util.Collections" methodName="synchronizedList" methodSignature="(Ljava/util/List;)Ljava/util/List;" timeDelta="34" timeBase="333" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.util.Collections" methodName="synchronizedSet" methodSignature="(Ljava/util/Set;)Ljava/util/Set;" timeDelta="1" timeBase="7" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.util.HashSet" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.util.concurrent.ConcurrentHashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                </node>
              </node>
              <node leaf="false" class="jason.environment.Environment" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-15" timeBase="57" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-15" timeBase="47" countDelta="0" countBase="1"/>
              </node>
            </node>
            <node leaf="false" class="jason.mas2j.ClassParameters" methodName="getParametersArray" methodSignature="()[Ljava/lang/String;" timeDelta="4" timeBase="15" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            </node>
            <node leaf="true" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getRunner" methodSignature="()Ljason/infra/centralised/BaseCentralisedMAS;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="-3" timeBase="592" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.lang.ClassLoader" methodName="loadClass" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="-6" timeBase="1214" countDelta="0" countBase="1"/>
            <node leaf="false" class="DebugEnvironment" methodName="init" methodSignature="([Ljava/lang/String;)V" timeDelta="-219" timeBase="10116" countDelta="0" countBase="1">
              <node leaf="true" class="java.io.FileInputStream" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="12" timeBase="90" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="10" timeBase="87" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.io.BufferedReader" methodName="close" methodSignature="()V" timeDelta="1" timeBase="21" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="12" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.util.logging.LogManager" methodName="readConfiguration" methodSignature="(Ljava/io/InputStream;)V" timeDelta="-4" timeBase="496" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.io.BufferedReader" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;)V" timeDelta="-5" timeBase="18" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.io.FileReader" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-68" timeBase="145" countDelta="0" countBase="1"/>
              <node leaf="false" class="java.util.logging.Logger" methodName="info" methodSignature="(Ljava/lang/String;)V" timeDelta="-176" timeBase="8714" countDelta="0" countBase="1">
                <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="-26" timeBase="35" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="getAgName" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                    <node leaf="true" class="java.lang.String" methodName="lastIndexOf" methodSignature="(I)I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                  </node>
                  <node leaf="true" class="java.util.logging.LogRecord" methodName="getMessage" methodSignature="()Ljava/lang/String;" timeDelta="-24" timeBase="24" countDelta="-1" countBase="1"/>
                </node>
                <node leaf="false" class="jason.runtime.MASConsoleLogHandler" methodName="publish" methodSignature="(Ljava/util/logging/LogRecord;)V" timeDelta="-150" timeBase="5157" countDelta="0" countBase="1">
                  <node leaf="false" class="java.util.logging.Formatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="2" timeBase="27" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="2" timeBase="24" countDelta="0" countBase="1">
                      <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="1" countDelta="0" countBase="3"/>
                      <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                      <node leaf="true" class="java.util.logging.LogRecord" methodName="getThrown" methodSignature="()Ljava/lang/Throwable;" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="getAgName" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="1" timeBase="22" countDelta="0" countBase="1">
                    <node leaf="true" class="java.util.logging.LogRecord" methodName="getLoggerName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="17" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.String" methodName="lastIndexOf" methodSignature="(I)I" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                  </node>
                  <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="append" methodSignature="(Ljava/lang/String;Ljava/lang/String;)V" timeDelta="-152" timeBase="5097" countDelta="0" countBase="1">
                    <node leaf="true" class="javax.swing.JFrame" methodName="isVisible" methodSignature="()Z" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                    <node leaf="true" class="javax.swing.JTextArea" methodName="getDocument" methodSignature="()Ljavax/swing/text/Document;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                    <node leaf="true" class="javax.swing.text.Document" methodName="getLength" methodSignature="()I" timeDelta="-49" timeBase="186" countDelta="0" countBase="1"/>
                    <node leaf="true" class="javax.swing.JTextArea" methodName="append" methodSignature="(Ljava/lang/String;)V" timeDelta="-103" timeBase="4897" countDelta="0" countBase="1"/>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="7" timeBase="63" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="8" timeBase="50" countDelta="0" countBase="1"/>
          </node>
          <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="4" timeBase="18" countDelta="0" countBase="1">
            <node leaf="false" class="jason.mas2j.ClassParameters" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="2" timeBase="13" countDelta="0" countBase="1">
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
            </node>
          </node>
          <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="3" timeBase="9" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          <node leaf="true" class="java.util.logging.Logger" methodName="fine" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
        </node>
        <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS" methodName="createController" methodSignature="()V" timeDelta="3" timeBase="2" countDelta="0" countBase="1"/>
        <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="createAgs" methodSignature="()V" timeDelta="-1018" timeBase="262239" countDelta="0" countBase="1">
          <node leaf="true" class="jason.infra.centralised.BaseCentralisedMAS" methodName="addAg" methodSignature="(Ljason/infra/centralised/CentralisedAgArch;)V" timeDelta="2" timeBase="13" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAg" methodSignature="()Ljason/asSemantics/Agent;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          <node leaf="true" class="jason.infra.centralised.BaseRuntimeServices" methodName="getDefaultAgArchs" methodSignature="()Ljava/util/Collection;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          <node leaf="true" class="jason.infra.centralised.RConf" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="1" timeBase="45" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="setCyclesAct" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="setCyclesSense" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="setEnvInfraTier" methodSignature="(Ljason/infra/centralised/CentralisedEnvironment;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          <node leaf="false" class="jason.mas2j.AgentParameters" methodName="addArchClass" methodSignature="(Ljava/util/Collection;)V" timeDelta="-1" timeBase="5" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          </node>
          <node leaf="true" class="jason.mas2j.AgentParameters" methodName="getBBClass" methodSignature="()Ljason/mas2j/ClassParameters;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          <node leaf="true" class="jason.mas2j.ClassParameters" methodName="getParameter" methodSignature="(I)Ljava/lang/String;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.runtime.RuntimeServicesFactory" methodName="get" methodSignature="()Ljason/runtime/RuntimeServices;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
          <node leaf="true" class="java.net.URI" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
          <node leaf="false" class="jason.infra.centralised.BaseRuntimeServices" methodName="getNewAgentName" methodSignature="(Ljava/lang/String;)Ljava/lang/String;" timeDelta="-3" timeBase="24" countDelta="0" countBase="1">
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
            <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAg" methodSignature="(Ljava/lang/String;)Ljason/infra/centralised/CentralisedAgArch;" timeDelta="-1" timeBase="6" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
            </node>
          </node>
          <node leaf="false" class="jason.mas2j.AgentParameters" methodName="getAgArchClasses" methodSignature="()Ljava/util/Collection;" timeDelta="-3" timeBase="9" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-2" timeBase="6" countDelta="0" countBase="1"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-14" timeBase="131" countDelta="0" countBase="1">
            <node leaf="true" class="jason.architecture.AgArch" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-5" timeBase="64" countDelta="0" countBase="1"/>
          </node>
          <node leaf="false" class="jason.mas2j.AgentParameters" methodName="getAsSetts" methodSignature="(ZZ)Ljason/runtime/Settings;" timeDelta="-41" timeBase="1675" countDelta="0" countBase="1">
            <node leaf="false" class="jason.runtime.Settings" methodName="addOption" methodSignature="(Ljava/lang/String;Ljava/lang/Object;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="6" countDelta="0" countBase="1"/>
            </node>
            <node leaf="false" class="jason.runtime.Settings" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-6" timeBase="60" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-3" timeBase="45" countDelta="0" countBase="1"/>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="createArchs" methodSignature="(Ljava/util/Collection;Ljava/lang/String;Ljason/mas2j/ClassParameters;Ljava/lang/String;Ljason/runtime/Settings;)V" timeDelta="-545" timeBase="252340" countDelta="0" countBase="1">
            <node leaf="false" class="jason.architecture.AgArch" methodName="createCustomArchs" methodSignature="(Ljava/util/Collection;)V" timeDelta="1" timeBase="8" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
            </node>
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="setLogger" methodSignature="()V" timeDelta="1" timeBase="66" countDelta="0" countBase="1">
              <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="3" timeBase="42" countDelta="0" countBase="1"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Agent" methodName="create" methodSignature="(Ljason/architecture/AgArch;Ljava/lang/String;Ljason/mas2j/ClassParameters;Ljava/lang/String;Ljason/runtime/Settings;)Ljason/asSemantics/Agent;" timeDelta="-891" timeBase="242747" countDelta="0" countBase="1">
              <node leaf="false" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="1337" timeBase="7043" countDelta="0" countBase="2">
                <node leaf="false" class="jason.bb.BeliefBase" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="2690" timeBase="12243" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="11" timeBase="240" countDelta="0" countBase="1">
                    <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="2" timeBase="24" countDelta="0" countBase="1"/>
                    <node leaf="false" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="20" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-1" timeBase="15" countDelta="0" countBase="1">
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Literal$FalseLiteral" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="7" timeBase="73" countDelta="0" countBase="1">
                    <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="3" timeBase="32" countDelta="0" countBase="1"/>
                    <node leaf="true" class="jason.util.Config" methodName="getBoolean" methodSignature="(Ljava/lang/String;)Z" timeDelta="2" timeBase="7" countDelta="0" countBase="1"/>
                    <node leaf="true" class="jason.util.Config" methodName="get" methodSignature="()Ljason/util/Config;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="7" countDelta="0" countBase="1"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="6" timeBase="47" countDelta="0" countBase="1">
                    <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="5" timeBase="31" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-1" timeBase="36" countDelta="0" countBase="1">
                    <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-1" timeBase="28" countDelta="0" countBase="1"/>
                  </node>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="2" timeBase="41" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="1" timeBase="22" countDelta="0" countBase="1"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Agent" methodName="initAg" methodSignature="()V" timeDelta="357" timeBase="47190" countDelta="0" countBase="1">
                <node leaf="false" class="jason.architecture.MindInspectorWeb" methodName="get" methodSignature="()Ljason/architecture/MindInspectorWeb;" timeDelta="347" timeBase="38612" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.architecture.MindInspectorWebImpl" methodName="startHttpServer" methodSignature="()Ljava/lang/String;" timeDelta="348" timeBase="31861" countDelta="0" countBase="1">
                    <node leaf="true" class="java.net.InetAddress" methodName="getLocalHost" methodSignature="()Ljava/net/InetAddress;" timeDelta="209" timeBase="4632" countDelta="0" countBase="1"/>
                    <node leaf="true" class="com.sun.net.httpserver.HttpServer" methodName="create" methodSignature="(Ljava/net/InetSocketAddress;I)Lcom/sun/net/httpserver/HttpServer;" timeDelta="152" timeBase="20102" countDelta="0" countBase="1"/>
                    <node leaf="true" class="jason.architecture.MindInspectorWebImpl" methodName="registerAgentsBrowserView" methodSignature="()V" timeDelta="116" timeBase="772" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.net.InetSocketAddress" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="12" timeBase="229" countDelta="0" countBase="1"/>
                    <node leaf="false" class="jason.architecture.MindInspectorWebImpl" methodName="registerAgView" methodSignature="(Ljava/lang/String;)Ljava/lang/String;" timeDelta="4" timeBase="1486" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.architecture.MindInspectorWebImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/architecture/MindInspectorWebImpl;Ljava/lang/String;)V" timeDelta="1" timeBase="9" countDelta="0" countBase="1"/>
                      <node leaf="true" class="com.sun.net.httpserver.HttpServer" methodName="createContext" methodSignature="(Ljava/lang/String;Lcom/sun/net/httpserver/HttpHandler;)Lcom/sun/net/httpserver/HttpContext;" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                      <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                    </node>
                    <node leaf="true" class="java.net.InetAddress" methodName="getHostAddress" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
                    <node leaf="true" class="com.sun.net.httpserver.HttpServer" methodName="setExecutor" methodSignature="(Ljava/util/concurrent/Executor;)V" timeDelta="-1" timeBase="9" countDelta="0" countBase="1"/>
                    <node leaf="true" class="com.sun.net.httpserver.HttpServer" methodName="start" methodSignature="()V" timeDelta="-1" timeBase="78" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                    <node leaf="false" class="jason.architecture.MindInspectorWebImpl" methodName="registerRootBrowserView" methodSignature="()V" timeDelta="-8" timeBase="1602" countDelta="0" countBase="1">
                      <node leaf="true" class="com.sun.net.httpserver.HttpServer" methodName="createContext" methodSignature="(Ljava/lang/String;Lcom/sun/net/httpserver/HttpHandler;)Lcom/sun/net/httpserver/HttpContext;" timeDelta="11" timeBase="662" countDelta="0" countBase="1"/>
                      <node leaf="true" class="jason.architecture.MindInspectorWebImpl$1" methodName="&lt;init&gt;" methodSignature="(Ljason/architecture/MindInspectorWebImpl;)V" timeDelta="-1" timeBase="10" countDelta="0" countBase="1"/>
                    </node>
                    <node leaf="true" class="java.util.concurrent.Executors" methodName="newCachedThreadPool" methodSignature="()Ljava/util/concurrent/ExecutorService;" timeDelta="-34" timeBase="785" countDelta="0" countBase="1"/>
                    <node leaf="false" class="java.io.PrintStream" methodName="println" methodSignature="(Ljava/lang/String;)V" timeDelta="-93" timeBase="1564" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.runtime.OutputStreamAdapter" methodName="println" methodSignature="(Ljava/lang/String;)V" timeDelta="-92" timeBase="1558" countDelta="0" countBase="1">
                        <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                        <node leaf="false" class="jason.runtime.OutputStreamAdapter" methodName="append" methodSignature="(Ljava/lang/String;)V" timeDelta="-91" timeBase="1546" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="append" methodSignature="(Ljava/lang/String;)V" timeDelta="-90" timeBase="1542" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="append" methodSignature="(Ljava/lang/String;Ljava/lang/String;)V" timeDelta="-91" timeBase="1540" countDelta="0" countBase="1">
                              <node leaf="true" class="javax.swing.JTextArea" methodName="append" methodSignature="(Ljava/lang/String;)V" timeDelta="-90" timeBase="1531" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="71" timeBase="5759" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="14" timeBase="17" countDelta="0" countBase="1"/>
                  <node leaf="true" class="jason.util.Config" methodName="getMindInspectorWebServerClassName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="50" countDelta="0" countBase="1"/>
                  <node leaf="true" class="jason.runtime.RuntimeServicesFactory" methodName="get" methodSignature="()Ljason/runtime/RuntimeServices;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                  <node leaf="false" class="jason.architecture.MindInspectorWebImpl" methodName="registerCentRunner" methodSignature="(Ljason/runtime/RuntimeServices;)V" timeDelta="-89" timeBase="898" countDelta="0" countBase="1">
                    <node leaf="true" class="com.sun.net.httpserver.HttpServer" methodName="createContext" methodSignature="(Ljava/lang/String;Lcom/sun/net/httpserver/HttpHandler;)Lcom/sun/net/httpserver/HttpContext;" timeDelta="1" timeBase="7" countDelta="0" countBase="1"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="initDefaultFunctions" methodSignature="()V" timeDelta="32" timeBase="1180" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                  <node leaf="false" class="jason.asSemantics.Agent" methodName="addFunction" methodSignature="(Ljava/lang/Class;Z)V" timeDelta="-6" timeBase="159" countDelta="0" countBase="1">
                    <node leaf="false" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-2" timeBase="22" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.asSemantics.DefaultArithFunction" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                    </node>
                    <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="-4" timeBase="122" countDelta="0" countBase="1"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="4" timeBase="24" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.util.Config" methodName="getKqmlFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                </node>
                <node leaf="true" class="jason.architecture.MindInspectorWeb" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                <node leaf="false" class="jason.architecture.MindInspectorWebImpl" methodName="registerAg" methodSignature="(Ljason/asSemantics/Agent;)V" timeDelta="-1" timeBase="43" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                </node>
                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-49" timeBase="5779" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="2"/>
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="17" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="11" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="9" countDelta="0" countBase="3">
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger$TEType" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="1" timeBase="112" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.asSyntax.Trigger$TEType$3" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="7" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.asSyntax.Trigger$TEType" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/Trigger$1;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger$TEOperator" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-4" timeBase="111" countDelta="0" countBase="1">
                    <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$3" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-12" timeBase="56" countDelta="0" countBase="1">
                    <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-12" timeBase="43" countDelta="0" countBase="1"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="&lt;init&gt;" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Circumstance;Ljason/runtime/Settings;Ljason/architecture/AgArch;)V" timeDelta="259" timeBase="6998" countDelta="0" countBase="1">
                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="setLogger" methodSignature="(Ljason/architecture/AgArch;)V" timeDelta="17" timeBase="101" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="9" timeBase="67" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="5" timeBase="5" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="1" countDelta="0" countBase="3"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-11" timeBase="13" countDelta="0" countBase="1"/>
                </node>
                <node leaf="true" class="jason.asSemantics.TransitionSystem$State" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="5" timeBase="47" countDelta="0" countBase="1"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="2" timeBase="49" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.concurrent.ConcurrentLinkedQueue" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="4" timeBase="4" countDelta="0" countBase="1"/>
                  <node leaf="true" class="jason.asSemantics.Circumstance" methodName="create" methodSignature="()V" timeDelta="1" timeBase="13" countDelta="0" countBase="1"/>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="reset" methodSignature="()V" timeDelta="-7" timeBase="15" countDelta="0" countBase="1">
                    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetSense" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetDeliberate" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetAct" methodSignature="()V" timeDelta="-7" timeBase="8" countDelta="0" countBase="1"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="setTS" methodSignature="(Ljason/asSemantics/TransitionSystem;)V" timeDelta="1" timeBase="56" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSemantics.Agent" methodName="setLogger" methodSignature="(Ljason/architecture/AgArch;)V" timeDelta="-1" timeBase="41" countDelta="0" countBase="1">
                    <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                    <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                  </node>
                </node>
                <node leaf="true" class="jason.util.Config" methodName="getKqmlFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.concurrent.ConcurrentLinkedQueue" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                <node leaf="true" class="jason.asSemantics.Circumstance" methodName="setTS" methodSignature="(Ljason/asSemantics/TransitionSystem;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                <node leaf="true" class="jason.runtime.Settings" methodName="nrcbp" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
              </node>
              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="init" methodSignature="(Ljason/asSemantics/Agent;[Ljava/lang/String;)V" timeDelta="13" timeBase="66" countDelta="0" countBase="1">
                <node leaf="true" class="java.lang.Class" methodName="getSimpleName" methodSignature="()Ljava/lang/String;" timeDelta="10" timeBase="7" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="2" timeBase="38" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="setBB" methodSignature="(Ljason/bb/BeliefBase;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              <node leaf="true" class="jason.mas2j.ClassParameters" methodName="getClassName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="-10" timeBase="29" countDelta="0" countBase="2"/>
              <node leaf="false" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-197" timeBase="9127" countDelta="0" countBase="2">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="35" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="calcHashCode" methodSignature="()I" timeDelta="-1" timeBase="7" countDelta="0" countBase="1">
                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                  </node>
                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" timeDelta="-2" timeBase="22" countDelta="0" countBase="1"/>
                </node>
                <node leaf="false" class="SaviAgentBrain" methodName="setEventPriorities" methodSignature="()V" timeDelta="-19" timeBase="45" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.Arrays" methodName="asList" methodSignature="([Ljava/lang/Object;)Ljava/util/List;" timeDelta="-10" timeBase="27" countDelta="0" countBase="1"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-369" timeBase="18069" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-8" timeBase="45" countDelta="0" countBase="1"/>
                  <node leaf="false" class="jason.asSemantics.Agent" methodName="checkCustomSelectOption" methodSignature="()V" timeDelta="-358" timeBase="18002" countDelta="0" countBase="1">
                    <node leaf="true" class="java.lang.Object" methodName="getClass" methodSignature="()Ljava/lang/Class;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.Class" methodName="getMethods" methodSignature="()[Ljava/lang/reflect/Method;" timeDelta="-303" timeBase="17849" countDelta="0" countBase="1"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Agent" methodName="load" methodSignature="(Ljava/lang/String;)V" timeDelta="-2885" timeBase="147520" countDelta="0" countBase="1">
                <node leaf="false" class="jason.asSemantics.Agent" methodName="fixAgInIAandFunctions" methodSignature="(Ljason/asSemantics/Agent;)V" timeDelta="243" timeBase="1230" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSemantics.Agent" methodName="fixAgInIAandFunctions" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSyntax/Literal;)V" timeDelta="85" timeBase="399" countDelta="0" countBase="3">
                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanLibrary" methodName="getLock" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-6" timeBase="6" countDelta="-2" countBase="2"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="addInitialGoalsInTS" methodSignature="()V" timeDelta="90" timeBase="1380" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="57" timeBase="651" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="24" timeBase="58" countDelta="0" countBase="1">
                      <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="23" timeBase="44" countDelta="0" countBase="1"/>
                    </node>
                    <node leaf="true" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="5" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addAchvGoal" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)Ljason/asSemantics/Event;" timeDelta="17" timeBase="183" countDelta="0" countBase="1">
                    <node leaf="true" class="jason.asSemantics.Event" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Intention;)V" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
                    <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="7" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                    </node>
                    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEvent" methodSignature="(Ljason/asSemantics/Event;)V" timeDelta="-6" timeBase="37" countDelta="0" countBase="1">
                      <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-4" timeBase="22" countDelta="0" countBase="1"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Intention" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="3" timeBase="26" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createAtom" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Atom;" timeDelta="1" timeBase="11" countDelta="0" countBase="1">
                      <node leaf="true" class="java.util.Map" methodName="computeIfAbsent" methodSignature="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="2" timeBase="15" countDelta="0" countBase="1">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                  <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                  <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="addInitialBelsInBB" methodSignature="()V" timeDelta="77" timeBase="1942" countDelta="0" countBase="2">
                  <node leaf="false" class="jason.asSemantics.Agent" methodName="addInitBel" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="39" timeBase="965" countDelta="0" countBase="4">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="53" timeBase="1145" countDelta="0" countBase="3">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)Z" timeDelta="53" timeBase="1144" countDelta="0" countBase="3">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="provideBelEntry" methodSignature="(Ljason/asSyntax/Literal;)Ljason/bb/DefaultBeliefBase$BelEntry;" timeDelta="55" timeBase="586" countDelta="0" countBase="3">
                          <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;)V" timeDelta="10" timeBase="421" countDelta="0" countBase="2">
                            <node leaf="true" class="java.util.concurrent.ConcurrentHashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                          </node>
                          <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="3" timeBase="5" countDelta="0" countBase="3">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="2" timeBase="192" countDelta="0" countBase="3">
                          <node leaf="false" class="jason.asSyntax.Rule" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="2" timeBase="191" countDelta="0" countBase="3">
                            <node leaf="false" class="jason.asSyntax.Rule" methodName="clone" methodSignature="()Ljason/asSyntax/Rule;" timeDelta="2" timeBase="190" countDelta="0" countBase="3">
                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="7" timeBase="139" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="clone" methodSignature="()Ljason/asSyntax/LogicalFormula;" timeDelta="8" timeBase="137" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="18" timeBase="23" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="18" timeBase="22" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="18" timeBase="21" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="18" timeBase="21" countDelta="0" countBase="1">
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="6" timeBase="161" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="clone" methodSignature="()Ljason/asSyntax/LogicalFormula;" timeDelta="7" timeBase="160" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="7" timeBase="20" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="7" timeBase="19" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="7" timeBase="18" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="6" timeBase="18" countDelta="0" countBase="1">
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="6" timeBase="1" countDelta="0" countBase="1"/>
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="16" countDelta="0" countBase="1">
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-3" timeBase="130" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="clone" methodSignature="()Ljason/asSyntax/LogicalFormula;" timeDelta="-3" timeBase="130" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.LogExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSyntax/LogExpr$LogicalOp;Ljason/asSyntax/LogicalFormula;)V" timeDelta="-1" timeBase="10" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.BinaryStructure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljava/lang/String;Ljason/asSyntax/Term;)V" timeDelta="1" timeBase="6" countDelta="0" countBase="1">
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="addTerm" methodSignature="(Ljason/asSyntax/Term;)V" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="18" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="18" countDelta="0" countBase="1"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.RelExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-11" timeBase="47" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.RelExpr" methodName="clone" methodSignature="()Ljason/asSyntax/LogicalFormula;" timeDelta="-11" timeBase="46" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-12" timeBase="20" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-12" timeBase="20" countDelta="0" countBase="1">
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-11" timeBase="18" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-12" timeBase="18" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-12" timeBase="17" countDelta="0" countBase="1">
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-12" timeBase="13" countDelta="0" countBase="1"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="4" timeBase="38" countDelta="0" countBase="4">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="3" timeBase="38" countDelta="0" countBase="4">
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="3" timeBase="37" countDelta="0" countBase="4">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="4" timeBase="36" countDelta="0" countBase="4">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="5" timeBase="23" countDelta="0" countBase="4">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="2" timeBase="4" countDelta="0" countBase="5">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="2" timeBase="3" countDelta="0" countBase="5">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="2" timeBase="2" countDelta="0" countBase="5">
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="5">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="5">
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="5"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-4" timeBase="11" countDelta="0" countBase="3">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-3" timeBase="10" countDelta="0" countBase="3">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="2" countDelta="0" countBase="3">
                                            <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="3"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-3" timeBase="6" countDelta="0" countBase="3">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-4" timeBase="6" countDelta="0" countBase="3">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-3" timeBase="5" countDelta="0" countBase="3">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-4" timeBase="5" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-4" timeBase="5" countDelta="0" countBase="3">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Rule" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/LogicalFormula;)V" timeDelta="-8" timeBase="41" countDelta="0" countBase="3">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-8" timeBase="39" countDelta="0" countBase="3">
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-7" timeBase="37" countDelta="0" countBase="3">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-7" timeBase="37" countDelta="0" countBase="3">
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-3" timeBase="9" countDelta="0" countBase="3">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-4" timeBase="9" countDelta="0" countBase="3">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-3" timeBase="6" countDelta="0" countBase="3">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-4" timeBase="6" countDelta="0" countBase="3">
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-4" timeBase="5" countDelta="0" countBase="3"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-3" timeBase="25" countDelta="0" countBase="3">
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="8" countDelta="0" countBase="3">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-3" timeBase="6" countDelta="0" countBase="3">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-3" timeBase="6" countDelta="0" countBase="3">
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="4" countDelta="0" countBase="3"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-1" timeBase="24" countDelta="0" countBase="3">
                          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                        </node>
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)V" timeDelta="-7" timeBase="308" countDelta="0" countBase="3">
                          <node leaf="true" class="java.util.Deque" methodName="addFirst" methodSignature="(Ljava/lang/Object;)V" timeDelta="-4" timeBase="48" countDelta="0" countBase="3"/>
                          <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-5" timeBase="72" countDelta="0" countBase="3">
                            <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" timeDelta="-5" timeBase="68" countDelta="0" countBase="3">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-6" timeBase="67" countDelta="0" countBase="3">
                                <node leaf="false" class="jason.asSyntax.Rule" methodName="calcHashCode" methodSignature="()I" timeDelta="-5" timeBase="65" countDelta="0" countBase="3">
                                  <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="45" countDelta="0" countBase="3">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="44" countDelta="0" countBase="3">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" timeDelta="-2" timeBase="65" countDelta="0" countBase="2">
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                        <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="30" countDelta="0" countBase="4">
                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="29" countDelta="0" countBase="4">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" timeDelta="1" timeBase="11" countDelta="0" countBase="1">
                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" timeDelta="-2" timeBase="51" countDelta="0" countBase="2">
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="23" countDelta="0" countBase="4">
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="23" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" timeDelta="-3" timeBase="65" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    </node>
                                                    <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="29" countDelta="0" countBase="2">
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="29" countDelta="0" countBase="2">
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" timeDelta="-1" timeBase="28" countDelta="0" countBase="2">
                                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" timeDelta="-4" timeBase="18" countDelta="0" countBase="3">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" timeDelta="-4" timeBase="17" countDelta="0" countBase="3">
                                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="5" countDelta="0" countBase="6">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="5" countDelta="0" countBase="6">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" timeDelta="-2" timeBase="3" countDelta="0" countBase="3">
                                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="5" timeBase="15" countDelta="0" countBase="4">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="4" timeBase="2" countDelta="0" countBase="4">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" timeDelta="1" timeBase="1" countDelta="0" countBase="4"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="7" countDelta="0" countBase="4"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" timeDelta="-3" timeBase="72" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" timeDelta="-2" timeBase="71" countDelta="0" countBase="1">
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" timeDelta="-2" timeBase="68" countDelta="0" countBase="1">
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" timeDelta="-2" timeBase="26" countDelta="0" countBase="1"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSemantics.Agent" methodName="addBel" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-12" timeBase="251" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" timeDelta="-1" timeBase="14" countDelta="0" countBase="1">
                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                        </node>
                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSemantics.Agent" methodName="brf" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)[Ljava/util/List;" timeDelta="-4" timeBase="139" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSemantics.Agent" methodName="brf" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;Z)[Ljava/util/List;" timeDelta="-3" timeBase="136" countDelta="0" countBase="1">
                          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                          <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(ILjason/asSyntax/Literal;)Z" timeDelta="-4" timeBase="113" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)Z" timeDelta="-3" timeBase="111" countDelta="0" countBase="1">
                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="provideBelEntry" methodSignature="(Ljason/asSyntax/Literal;)Ljason/bb/DefaultBeliefBase$BelEntry;" timeDelta="6" timeBase="18" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="6" timeBase="5" countDelta="0" countBase="1">
                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="7" timeBase="0" countDelta="1" countBase="0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                </node>
                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="6" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="6" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="isAtom" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    </node>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                </node>
                              </node>
                              <node leaf="true" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="1"/>
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-3" timeBase="27" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="26" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="26" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-3" timeBase="25" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="23" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="14" countDelta="0" countBase="1">
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-3" timeBase="23" countDelta="0" countBase="1">
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" timeDelta="-2" timeBase="16" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" timeDelta="-2" timeBase="16" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" timeDelta="-3" timeBase="35" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="4" countDelta="0" countBase="1">
                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                </node>
                                <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="15" countDelta="0" countBase="1">
                                  <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                  <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="14" countDelta="0" countBase="1"/>
                                </node>
                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="6" countDelta="0" countBase="2">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="([Ljava/util/List;Ljason/asSemantics/Intention;)Z" timeDelta="-9" timeBase="91" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="(Ljason/asSemantics/Event;)V" timeDelta="-1" timeBase="47" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" timeDelta="1" timeBase="30" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" timeDelta="2" timeBase="27" countDelta="0" countBase="1">
                              <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="java.lang.String" methodName="isEmpty" methodSignature="()Z" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.net.URL" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-11" timeBase="55" countDelta="0" countBase="1"/>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="parseAS" methodSignature="(Ljava/net/URL;)Z" timeDelta="-717" timeBase="85735" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSemantics.Agent" methodName="parseAS" methodSignature="(Ljava/net/URL;Ljava/lang/String;)Z" timeDelta="-716" timeBase="85727" countDelta="0" countBase="1">
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="3" timeBase="0" countDelta="1" countBase="0"/>
                    <node leaf="true" class="java.util.logging.Logger" methodName="fine" methodSignature="(Ljava/lang/String;)V" timeDelta="2" timeBase="4" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="-2" timeBase="9" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.net.URL" methodName="openStream" methodSignature="()Ljava/io/InputStream;" timeDelta="-4" timeBase="92" countDelta="0" countBase="1"/>
                    <node leaf="false" class="jason.asSemantics.Agent" methodName="parseAS" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;)V" timeDelta="-716" timeBase="85610" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="86" timeBase="580" countDelta="0" countBase="1">
                        <node leaf="true" class="java.util.regex.Pattern" methodName="compile" methodSignature="(Ljava/lang/String;)Ljava/util/regex/Pattern;" timeDelta="65" timeBase="504" countDelta="0" countBase="1"/>
                        <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="17" timeBase="39" countDelta="0" countBase="1"/>
                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_la1_init_0" methodSignature="()V" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                        <node leaf="true" class="java.util.HashSet" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;)V" timeDelta="16" timeBase="7995" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;)V" timeDelta="17" timeBase="7990" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;II)V" timeDelta="5" timeBase="70" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;III)V" timeDelta="3" timeBase="61" countDelta="0" countBase="1">
                              <node leaf="true" class="java.io.InputStreamReader" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;)V" timeDelta="4" timeBase="22" countDelta="0" countBase="1"/>
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;III)V" timeDelta="1" timeBase="33" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="2" timeBase="35" countDelta="0" countBase="1"/>
                          <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/as2j$1;)V" timeDelta="1" timeBase="20" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="13" countDelta="0" countBase="1">
                              <node leaf="true" class="java.lang.Error" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="9" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                          <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="getInstance" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/directives/Directive;" timeDelta="-7" timeBase="323" countDelta="0" countBase="1">
                            <node leaf="false" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="4" timeBase="100" countDelta="0" countBase="1">
                              <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="1" timeBase="58" countDelta="0" countBase="1"/>
                            </node>
                            <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="-12" timeBase="215" countDelta="0" countBase="1"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="setASLSource" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="agent" methodSignature="(Ljason/asSemantics/Agent;)Z" timeDelta="-2783" timeBase="60611" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="4" timeBase="106" countDelta="0" countBase="4">
                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="4" timeBase="104" countDelta="0" countBase="4">
                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="13" countDelta="0" countBase="16">
                              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="13" countDelta="0" countBase="16">
                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" timeDelta="7" timeBase="98" countDelta="0" countBase="2">
                                  <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" timeDelta="6" timeBase="70" countDelta="0" countBase="2"/>
                                  <node leaf="true" class="java.io.Reader" methodName="close" methodSignature="()V" timeDelta="1" timeBase="31" countDelta="0" countBase="1"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="18" countDelta="0" countBase="7">
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" timeDelta="1" timeBase="28" countDelta="0" countBase="4">
                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="1" timeBase="27" countDelta="0" countBase="4"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="8" countDelta="0" countBase="4"/>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                        <node leaf="true" class="jason.util.Config" methodName="getBoolean" methodSignature="(Ljava/lang/String;)Z" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getSingletonVars" methodSignature="()Ljava/util/List;" timeDelta="-59" timeBase="5643" countDelta="0" countBase="2">
                          <node leaf="true" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" timeDelta="126" timeBase="718" countDelta="0" countBase="2"/>
                          <node leaf="true" class="java.util.stream.Stream" methodName="filter" methodSignature="(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;" timeDelta="5" timeBase="205" countDelta="0" countBase="2"/>
                          <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                          <node leaf="true" class="java.util.Map" methodName="entrySet" methodSignature="()Ljava/util/Set;" timeDelta="-1" timeBase="3" countDelta="0" countBase="2"/>
                          <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" timeDelta="-1" timeBase="71" countDelta="0" countBase="2"/>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-6" timeBase="333" countDelta="0" countBase="2">
                            <node leaf="false" class="jason.asSyntax.Plan" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="2" countDelta="0" countBase="8">
                              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-3" timeBase="203" countDelta="0" countBase="3">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="1" timeBase="8" countDelta="0" countBase="5">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="8" timeBase="32" countDelta="0" countBase="1">
                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" timeDelta="10" timeBase="5" countDelta="0" countBase="1"/>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                  <node leaf="true" class="java.util.Map" methodName="containsKey" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="16" countDelta="0" countBase="1"/>
                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-6" timeBase="260" countDelta="0" countBase="2"/>
                            </node>
                          </node>
                          <node leaf="true" class="java.util.stream.Collectors" methodName="toList" methodSignature="()Ljava/util/stream/Collector;" timeDelta="-31" timeBase="1871" countDelta="0" countBase="2"/>
                          <node leaf="true" class="java.util.Set" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" timeDelta="-98" timeBase="1486" countDelta="0" countBase="2"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="add" methodSignature="(Ljason/asSyntax/Plan;)Ljason/asSyntax/Plan;" timeDelta="-75" timeBase="3147" countDelta="0" countBase="2">
                          <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="add" methodSignature="(Ljason/asSyntax/Plan;Z)Ljason/asSyntax/Plan;" timeDelta="-75" timeBase="3145" countDelta="0" countBase="2">
                            <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createStructure" methodSignature="(Ljava/lang/String;[Ljason/asSyntax/Term;)Ljason/asSyntax/Structure;" timeDelta="2" timeBase="9" countDelta="0" countBase="2">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="addTerms" methodSignature="([Ljason/asSyntax/Term;)Ljason/asSyntax/Literal;" timeDelta="3" timeBase="2" countDelta="0" countBase="2">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" timeDelta="3" timeBase="0" countDelta="2" countBase="0"/>
                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                              </node>
                            </node>
                            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                            <node leaf="true" class="jason.asSyntax.Plan" methodName="setLabel" methodSignature="(Ljason/asSyntax/Pred;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                            <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="14" countDelta="0" countBase="3">
                              <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="3" countDelta="0" countBase="2">
                                <node leaf="true" class="jason.asSyntax.Trigger$TEType$2" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" timeDelta="-1" timeBase="4" countDelta="0" countBase="2"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                            </node>
                            <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
                            <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createString" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/StringTerm;" timeDelta="-4" timeBase="525" countDelta="0" countBase="2">
                              <node leaf="false" class="jason.asSyntax.StringTermImpl" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-2" timeBase="50" countDelta="0" countBase="1">
                                <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                                <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-2" timeBase="36" countDelta="0" countBase="1"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getUniqueLabel" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-7" timeBase="56" countDelta="0" countBase="2">
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                              <node leaf="true" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-1" timeBase="4" countDelta="0" countBase="2"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                              <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" timeDelta="-7" timeBase="35" countDelta="0" countBase="2"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-29" timeBase="1231" countDelta="0" countBase="4">
                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="2" timeBase="1" countDelta="0" countBase="6"/>
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-11" timeBase="256" countDelta="0" countBase="4"/>
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-12" timeBase="57" countDelta="0" countBase="1">
                                <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                                <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-13" timeBase="44" countDelta="0" countBase="1"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="initial_goal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-255" timeBase="4429" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-256" timeBase="4422" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="1" timeBase="5" countDelta="0" countBase="1">
                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="5" countDelta="0" countBase="1">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="1" timeBase="36" countDelta="0" countBase="1">
                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="19" countDelta="0" countBase="1">
                              <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="33" countDelta="0" countBase="1">
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="33" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="18" countDelta="0" countBase="1">
                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="-1" timeBase="18" countDelta="0" countBase="1"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-10" timeBase="710" countDelta="0" countBase="1">
                              <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-1" timeBase="15" countDelta="0" countBase="1"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-122" timeBase="1038" countDelta="0" countBase="1">
                              <node leaf="true" class="java.util.HashSet" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan" methodSignature="()Ljason/asSyntax/Plan;" timeDelta="-1137" timeBase="19054" countDelta="0" countBase="2">
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="220" timeBase="20404" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="221" timeBase="20401" countDelta="0" countBase="1">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="220" timeBase="20400" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="221" timeBase="20382" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="364" timeBase="15691" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="365" timeBase="15688" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="365" timeBase="15686" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="365" timeBase="15684" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="366" timeBase="15681" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="365" timeBase="15673" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="366" timeBase="15599" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="369" timeBase="15566" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="370" timeBase="15554" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="371" timeBase="15543" countDelta="0" countBase="1">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="370" timeBase="15543" countDelta="0" countBase="1">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="369" timeBase="15543" countDelta="0" countBase="1">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="372" timeBase="15525" countDelta="0" countBase="1">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="372" timeBase="15524" countDelta="0" countBase="1">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="372" timeBase="15523" countDelta="0" countBase="1">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="372" timeBase="15523" countDelta="0" countBase="1">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="369" timeBase="11138" countDelta="0" countBase="1">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="370" timeBase="11137" countDelta="0" countBase="1">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="278" timeBase="996" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="279" timeBase="952" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="10" timeBase="83" countDelta="0" countBase="1">
                                                                            <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="17" timeBase="56" countDelta="0" countBase="1"/>
                                                                            <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="2" timeBase="9" countDelta="0" countBase="1"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="create" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)Ljason/asSyntax/UnnamedVar;" timeDelta="-7" timeBase="50" countDelta="0" countBase="1">
                                                                            <node leaf="true" class="java.lang.String" methodName="length" methodSignature="()I" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                                                            <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;)V" timeDelta="-6" timeBase="44" countDelta="0" countBase="1">
                                                                              <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;I)V" timeDelta="-6" timeBase="36" countDelta="0" countBase="1">
                                                                                <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                                                                <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                                                                <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                                                                <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="-6" timeBase="10" countDelta="0" countBase="1"/>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="93" timeBase="10137" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSemantics.Agent" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="93" timeBase="10125" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.directives.FunctionRegister" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="64" timeBase="9895" countDelta="0" countBase="1">
                                                                            <node leaf="false" class="jason.asSyntax.directives.FunctionRegister" methodName="addJasonFunction" methodSignature="(Ljava/lang/Class;)V" timeDelta="3" timeBase="94" countDelta="0" countBase="16">
                                                                              <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="2" timeBase="66" countDelta="0" countBase="16"/>
                                                                              <node leaf="true" class="jason.functions.log" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                                                              <node leaf="true" class="jason.functions.Length" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                                                              <node leaf="true" class="jason.functions.Round" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                                                              <node leaf="true" class="jason.functions.time" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                                                              <node leaf="true" class="jason.functions.Max" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-2" timeBase="5" countDelta="0" countBase="1"/>
                                                                            </node>
                                                                            <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="1" timeBase="33" countDelta="0" countBase="1"/>
                                                                            <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSyntax.ArithExpr$ArithmeticOp" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="34" timeBase="286" countDelta="0" countBase="1">
                                                                    <node leaf="false" class="jason.asSyntax.ArithExpr$ArithmeticOp$4" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="11" timeBase="13" countDelta="0" countBase="1">
                                                                      <node leaf="false" class="jason.asSyntax.ArithExpr$ArithmeticOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/ArithExpr$1;)V" timeDelta="11" timeBase="9" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSyntax.ArithExpr$ArithmeticOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="10" timeBase="7" countDelta="0" countBase="1">
                                                                          <node leaf="true" class="java.lang.Enum" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="12" timeBase="5" countDelta="0" countBase="1"/>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.ArithExpr$ArithmeticOp$5" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="19" countDelta="0" countBase="1">
                                                                      <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/ArithExpr$1;)V" timeDelta="-11" timeBase="15" countDelta="0" countBase="1"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.ArithExpr$ArithmeticOp$7" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="7" countDelta="0" countBase="1">
                                                                      <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/ArithExpr$1;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="16" countDelta="0" countBase="1"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="8" countDelta="0" countBase="2"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="1" timeBase="37" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="37" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="35" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="20" countDelta="0" countBase="1"/>
                                                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                              <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="13" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="9" countDelta="0" countBase="1">
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" timeDelta="-1" timeBase="4" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-2" timeBase="17" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-2" timeBase="15" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="11" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="6" countDelta="0" countBase="1">
                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                        <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="3" countDelta="0" countBase="1">
                                                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="8" countDelta="0" countBase="1">
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.RelExpr$RelationalOp" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="2" timeBase="269" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.RelExpr$RelationalOp$7" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="2" timeBase="7" countDelta="0" countBase="1"/>
                                    <node leaf="false" class="jason.asSyntax.RelExpr$RelationalOp$3" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="7" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.RelExpr$RelationalOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/RelExpr$1;)V" timeDelta="-1" timeBase="4" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.RelExpr$RelationalOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.RelExpr$RelationalOp$9" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                                    <node leaf="false" class="jason.asSyntax.RelExpr$RelationalOp$1" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="16" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.RelExpr$RelationalOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/RelExpr$1;)V" timeDelta="-1" timeBase="11" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.RelExpr$RelationalOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.RelExpr$RelationalOp$5" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-11" timeBase="18" countDelta="0" countBase="1"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="trigger" methodSignature="()Ljason/asSyntax/Trigger;" timeDelta="5" timeBase="104" countDelta="0" countBase="2">
                            <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" timeDelta="4" timeBase="7" countDelta="0" countBase="2">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="6" timeBase="2" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="5" timeBase="2" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="6" timeBase="1" countDelta="0" countBase="2">
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="6" timeBase="0" countDelta="0" countBase="2"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="2" timeBase="67" countDelta="0" countBase="2">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="4" timeBase="8" countDelta="0" countBase="2">
                                <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="2" timeBase="17" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="17" countDelta="0" countBase="2">
                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="10" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="2" timeBase="9" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" timeDelta="2" timeBase="7" countDelta="0" countBase="2">
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" timeDelta="1" timeBase="7" countDelta="0" countBase="2"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-5" timeBase="10" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-6" timeBase="9" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="1" countDelta="0" countBase="2">
                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                    </node>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="-6" timeBase="6" countDelta="-2" countBase="2"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="forceFullLiteralImpl" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="11" countDelta="0" countBase="2">
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" timeDelta="-1" timeBase="8" countDelta="0" countBase="2">
                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" timeDelta="-1" timeBase="5" countDelta="0" countBase="2">
                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="2"/>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Plan" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Pred;Ljason/asSyntax/Trigger;Ljason/asSyntax/LogicalFormula;Ljason/asSyntax/PlanBody;)V" timeDelta="-1" timeBase="20" countDelta="0" countBase="2">
                            <node leaf="true" class="jason.asSyntax.Plan" methodName="setContext" methodSignature="(Ljason/asSyntax/LogicalFormula;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="2"/>
                            <node leaf="true" class="jason.asSyntax.Trigger" methodName="setAsTriggerTerm" methodSignature="(Z)V" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="5"/>
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-2" timeBase="11" countDelta="0" countBase="2">
                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="7" countDelta="0" countBase="2">
                              <node leaf="true" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="5" countDelta="0" countBase="2"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Plan" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-6" timeBase="738" countDelta="0" countBase="1">
                            <node leaf="true" class="jason.asSyntax.ASSyntax" methodName="createAtom" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Atom;" timeDelta="-2" timeBase="225" countDelta="0" countBase="3"/>
                            <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-2" timeBase="34" countDelta="0" countBase="1"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="checkInternalActionsInContext" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSemantics/Agent;)Ljason/asSyntax/InternalActionLiteral;" timeDelta="-51" timeBase="642" countDelta="0" countBase="2"/>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-1195" timeBase="7444" countDelta="0" countBase="2">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_term" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-1194" timeBase="7442" countDelta="0" countBase="2">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_factor" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-1195" timeBase="7441" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="2" timeBase="21" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="20" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="11" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="2" timeBase="10" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" timeDelta="2" timeBase="9" countDelta="0" countBase="2">
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" timeDelta="2" timeBase="8" countDelta="0" countBase="2">
                                            <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="2" timeBase="7" countDelta="0" countBase="2"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="body_formula" methodSignature="()Ljava/lang/Object;" timeDelta="-1196" timeBase="7417" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.PlanBody$BodyType" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="27" timeBase="382" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.PlanBody$BodyType$2" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="14" timeBase="8" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.PlanBody$BodyType" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/PlanBody$1;)V" timeDelta="2" timeBase="3" countDelta="0" countBase="1"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.PlanBody$BodyType$14" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="13" timeBase="7" countDelta="0" countBase="1"/>
                                    <node leaf="false" class="jason.asSyntax.PlanBody$BodyType$3" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="7" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.PlanBody$BodyType" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/PlanBody$1;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.PlanBody$BodyType" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.PlanBody$BodyType$8" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                                    <node leaf="true" class="jason.asSyntax.PlanBody$BodyType$6" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="7" countDelta="0" countBase="1"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;)V" timeDelta="-2" timeBase="20" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;Z)V" timeDelta="-1" timeBase="17" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Z)V" timeDelta="-1" timeBase="12" countDelta="0" countBase="2">
                                        <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="2"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="164" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="164" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="163" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="162" countDelta="0" countBase="2">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="161" countDelta="0" countBase="2">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="161" countDelta="0" countBase="2">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="160" countDelta="0" countBase="2">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="159" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="159" countDelta="0" countBase="2">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-4" timeBase="152" countDelta="0" countBase="2">
                                                      <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="7" countDelta="0" countBase="2">
                                                        <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-1" timeBase="11" countDelta="0" countBase="2">
                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="10" countDelta="0" countBase="2">
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="9" countDelta="0" countBase="2">
                                                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-1" timeBase="112" countDelta="0" countBase="2">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="5" countDelta="0" countBase="4">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="11" countDelta="0" countBase="2">
                                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                                                            <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="3" countDelta="0" countBase="2"/>
                                                            <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="3" countDelta="0" countBase="2"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="-3" timeBase="91" countDelta="0" countBase="2">
                                                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="86" countDelta="0" countBase="2">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" timeDelta="-2" timeBase="18" countDelta="0" countBase="2">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="2"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="68" countDelta="0" countBase="2">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="67" countDelta="0" countBase="2">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="67" countDelta="0" countBase="2">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="51" countDelta="0" countBase="2">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="50" countDelta="0" countBase="2">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="50" countDelta="0" countBase="2">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="49" countDelta="0" countBase="2">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="48" countDelta="0" countBase="2">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="48" countDelta="0" countBase="2">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="39" countDelta="0" countBase="2">
                                                                                <node leaf="true" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="1" timeBase="7" countDelta="0" countBase="2"/>
                                                                                <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                                                                                <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-2" timeBase="8" countDelta="0" countBase="2"/>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-13" timeBase="77" countDelta="0" countBase="1">
                                    <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="10" countDelta="0" countBase="1"/>
                                    <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-11" timeBase="59" countDelta="0" countBase="1"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="loadKqmlPlans" methodSignature="()V" timeDelta="-2647" timeBase="55156" countDelta="0" countBase="1">
                  <node leaf="true" class="java.lang.Class" methodName="getResource" methodSignature="(Ljava/lang/String;)Ljava/net/URL;" timeDelta="8" timeBase="118" countDelta="0" countBase="2"/>
                  <node leaf="true" class="jason.util.Config" methodName="getKqmlPlansFile" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                  <node leaf="true" class="java.lang.String" methodName="substring" methodSignature="(I)Ljava/lang/String;" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                  <node leaf="false" class="jason.asSemantics.Agent" methodName="parseAS" methodSignature="(Ljava/net/URL;Ljava/lang/String;)Z" timeDelta="-2662" timeBase="54892" countDelta="0" countBase="1">
                    <node leaf="true" class="java.net.URL" methodName="openStream" methodSignature="()Ljava/io/InputStream;" timeDelta="85" timeBase="150" countDelta="0" countBase="1"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="2" timeBase="0" countDelta="1" countBase="0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                    <node leaf="false" class="jason.asSemantics.Agent" methodName="parseAS" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;)V" timeDelta="-2746" timeBase="54730" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;)V" timeDelta="16" timeBase="67" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;)V" timeDelta="15" timeBase="67" countDelta="0" countBase="1">
                          <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="getInstance" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/directives/Directive;" timeDelta="9" timeBase="18" countDelta="0" countBase="1">
                            <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="5" timeBase="5" countDelta="0" countBase="1"/>
                            <node leaf="true" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="5" timeBase="7" countDelta="0" countBase="1"/>
                            <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="isSingleton" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;II)V" timeDelta="3" timeBase="32" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;Ljava/lang/String;III)V" timeDelta="3" timeBase="32" countDelta="0" countBase="1">
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;III)V" timeDelta="2" timeBase="16" countDelta="0" countBase="1"/>
                              <node leaf="true" class="java.io.InputStreamReader" methodName="&lt;init&gt;" methodSignature="(Ljava/io/InputStream;)V" timeDelta="2" timeBase="14" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="agent" methodSignature="(Ljason/asSemantics/Agent;)Z" timeDelta="-2762" timeBase="54661" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="belief" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="2" timeBase="2128" countDelta="0" countBase="4">
                          <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="13" timeBase="1155" countDelta="0" countBase="2">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="10" timeBase="765" countDelta="0" countBase="3">
                              <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" timeDelta="34" timeBase="1558" countDelta="0" countBase="1"/>
                              <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" timeDelta="2" timeBase="97" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="6" timeBase="9" countDelta="0" countBase="2">
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="2" timeBase="0" countDelta="4" countBase="0"/>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                              <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                              <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" timeDelta="-8" timeBase="201" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Rule" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/LogicalFormula;)V" timeDelta="9" timeBase="34" countDelta="0" countBase="3">
                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="7" timeBase="29" countDelta="0" countBase="3">
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="7" timeBase="27" countDelta="0" countBase="3">
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="8" timeBase="26" countDelta="0" countBase="3">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="6" timeBase="26" countDelta="0" countBase="3">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="3" timeBase="14" countDelta="0" countBase="3">
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="3" timeBase="14" countDelta="0" countBase="3">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="5" timeBase="10" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="7" timeBase="8" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="6" timeBase="7" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="6" timeBase="6" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="5" timeBase="5" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="5" timeBase="1" countDelta="0" countBase="1">
                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" timeDelta="4" timeBase="0" countDelta="1" countBase="0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="4" countDelta="0" countBase="5"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="0" countBase="6">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" timeDelta="1" timeBase="0" countDelta="6" countBase="0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="4" countDelta="0" countBase="3"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="3"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="8" timeBase="271" countDelta="0" countBase="4">
                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="7" timeBase="24" countDelta="0" countBase="4">
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="6" timeBase="24" countDelta="0" countBase="4">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="4" timeBase="23" countDelta="0" countBase="4">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="3" timeBase="10" countDelta="0" countBase="5">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="4" timeBase="9" countDelta="0" countBase="5">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="11" timeBase="10" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="11" timeBase="9" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="11" timeBase="8" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="11" timeBase="7" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="11" timeBase="6" countDelta="0" countBase="1">
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="12" timeBase="0" countDelta="1" countBase="0"/>
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="4" countDelta="0" countBase="5">
                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="4" countDelta="0" countBase="5"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="5" countDelta="0" countBase="3"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="5" timeBase="183" countDelta="0" countBase="4">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="3" timeBase="162" countDelta="0" countBase="4">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="2" timeBase="78" countDelta="0" countBase="8">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="77" countDelta="0" countBase="8">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="77" countDelta="0" countBase="8">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="76" countDelta="0" countBase="8">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="67" countDelta="0" countBase="8">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="list" methodSignature="()Ljason/asSyntax/ListTermImpl;" timeDelta="7" timeBase="75" countDelta="0" countBase="5">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term_in_list" methodSignature="()Ljason/asSyntax/Term;" timeDelta="11" timeBase="79" countDelta="0" countBase="3">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="14" timeBase="73" countDelta="0" countBase="3">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="14" timeBase="73" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="73" countDelta="0" countBase="3">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="15" timeBase="71" countDelta="0" countBase="3">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="14" timeBase="71" countDelta="0" countBase="3">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="13" timeBase="66" countDelta="0" countBase="3">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="37" timeBase="108" countDelta="0" countBase="1">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="34" timeBase="79" countDelta="0" countBase="1">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="33" timeBase="76" countDelta="0" countBase="1">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="32" timeBase="67" countDelta="0" countBase="1">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="32" timeBase="67" countDelta="0" countBase="1">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="32" timeBase="67" countDelta="0" countBase="1">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="33" timeBase="49" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="32" timeBase="49" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="33" timeBase="48" countDelta="0" countBase="1">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="31" timeBase="48" countDelta="0" countBase="1">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="32" timeBase="47" countDelta="0" countBase="1">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="32" timeBase="47" countDelta="0" countBase="1">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="23" timeBase="39" countDelta="0" countBase="1">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="12" timeBase="11" countDelta="0" countBase="1">
                                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="12" timeBase="9" countDelta="0" countBase="1">
                                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="11" timeBase="7" countDelta="0" countBase="1">
                                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="12" timeBase="6" countDelta="0" countBase="1">
                                                                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                                                                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                            </node>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="9" timeBase="6" countDelta="0" countBase="1">
                                                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                    </node>
                                                                                    <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="8" timeBase="6" countDelta="0" countBase="1">
                                                                                    <node leaf="false" class="jason.asSemantics.Agent" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="8" timeBase="3" countDelta="0" countBase="1">
                                                                                      <node leaf="true" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="9" timeBase="0" countDelta="1" countBase="0"/>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                                                    <node leaf="true" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="16" countDelta="0" countBase="1"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" timeDelta="1" timeBase="9" countDelta="0" countBase="1">
                                                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                                            <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="10" countDelta="0" countBase="2">
                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="20" countDelta="0" countBase="1"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="1" timeBase="10" countDelta="0" countBase="1">
                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="5" countDelta="0" countBase="1">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="append" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="1" timeBase="3" countDelta="0" countBase="3"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="5" countDelta="0" countBase="5"/>
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="44" countDelta="0" countBase="3">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-8" timeBase="44" countDelta="0" countBase="3">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="43" countDelta="0" countBase="3">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="43" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-7" timeBase="42" countDelta="0" countBase="3">
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="5" countDelta="0" countBase="3"/>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-7" timeBase="36" countDelta="0" countBase="3">
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="15" countDelta="0" countBase="1"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-6" timeBase="18" countDelta="0" countBase="3">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-6" timeBase="17" countDelta="0" countBase="3">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="-6" timeBase="16" countDelta="0" countBase="3">
                                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="-1" timeBase="10" countDelta="0" countBase="3">
                                                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="-1" timeBase="9" countDelta="0" countBase="3"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="8" countDelta="0" countBase="8">
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="8" countDelta="0" countBase="8">
                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="3" countDelta="0" countBase="8">
                                              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="-2" timeBase="2" countDelta="0" countBase="3">
                                                <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" timeDelta="-1" timeBase="1" countDelta="-3" countBase="3"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="1" timeBase="11" countDelta="0" countBase="4">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="1" timeBase="10" countDelta="0" countBase="4">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="1" timeBase="8" countDelta="0" countBase="4">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="7" countDelta="0" countBase="4">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="3" countDelta="0" countBase="4"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="8"/>
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-3" timeBase="4" countDelta="0" countBase="4">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-2" timeBase="3" countDelta="0" countBase="4">
                                <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-2" timeBase="2" countDelta="0" countBase="4"/>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="723" countDelta="0" countBase="3">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="3" timeBase="722" countDelta="0" countBase="3">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="21" timeBase="533" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="43" timeBase="234" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="41" timeBase="218" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="40" timeBase="218" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="41" timeBase="217" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="40" timeBase="217" countDelta="0" countBase="2">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="41" timeBase="216" countDelta="0" countBase="2">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="40" timeBase="216" countDelta="0" countBase="2">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="40" timeBase="210" countDelta="0" countBase="2">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="30" timeBase="125" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="27" timeBase="96" countDelta="0" countBase="2">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="13" timeBase="45" countDelta="0" countBase="4">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="43" countDelta="0" countBase="4">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="14" timeBase="42" countDelta="0" countBase="4">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="14" timeBase="42" countDelta="0" countBase="4">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="12" timeBase="32" countDelta="0" countBase="4">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="11" timeBase="32" countDelta="0" countBase="4">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="12" timeBase="31" countDelta="0" countBase="4">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="12" timeBase="30" countDelta="0" countBase="4">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="12" timeBase="30" countDelta="0" countBase="4">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="12" timeBase="29" countDelta="0" countBase="4">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="12" timeBase="23" countDelta="0" countBase="4">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="13" timeBase="13" countDelta="0" countBase="4">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="13" timeBase="12" countDelta="0" countBase="4">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="12" timeBase="12" countDelta="0" countBase="4">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="13" timeBase="9" countDelta="0" countBase="4">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="13" timeBase="9" countDelta="0" countBase="4">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_58" methodSignature="()Z" timeDelta="14" timeBase="7" countDelta="0" countBase="4">
                                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_38" methodSignature="()Z" timeDelta="12" timeBase="7" countDelta="0" countBase="4">
                                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="13" timeBase="6" countDelta="0" countBase="4">
                                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="6" countDelta="0" countBase="4">
                                                                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="2" countDelta="0" countBase="4">
                                                                                              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                                                            </node>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_55" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="-1" timeBase="7" countDelta="0" countBase="4"/>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="10" countDelta="0" countBase="4">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="9" countDelta="0" countBase="4">
                                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="5"/>
                                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="3" countDelta="0" countBase="4">
                                                                  <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                    </node>
                                                    <node leaf="true" class="java.util.ArrayList" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="8" countDelta="0" countBase="4">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="8" countDelta="0" countBase="4">
                                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="3" timeBase="0" countDelta="0" countBase="5">
                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="2" timeBase="0" countDelta="0" countBase="5"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="1" countDelta="0" countBase="4"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="5" countDelta="0" countBase="4">
                                                        <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="3" countDelta="0" countBase="4"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="6" timeBase="1" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="5" timeBase="1" countDelta="0" countBase="2">
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="2" timeBase="1" countDelta="0" countBase="2">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="2" timeBase="8" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="7" countDelta="0" countBase="2">
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="2" timeBase="13" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="1" timeBase="12" countDelta="0" countBase="2">
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="1" timeBase="9" countDelta="0" countBase="2">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="9" countDelta="0" countBase="2">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="2" timeBase="4" countDelta="0" countBase="2">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="1" timeBase="4" countDelta="0" countBase="2">
                                                            <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="1" timeBase="20" countDelta="0" countBase="2"/>
                                                <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="1" timeBase="4" countDelta="0" countBase="2"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                <node leaf="true" class="jason.asSyntax.LogExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSyntax/LogExpr$LogicalOp;Ljason/asSyntax/LogicalFormula;)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-39" timeBase="585" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSyntax/LogExpr$LogicalOp;Ljason/asSyntax/LogicalFormula;)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.BinaryStructure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljava/lang/String;Ljason/asSyntax/Term;)V" timeDelta="-1" timeBase="7" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.LogExpr$LogicalOp$3" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-6" timeBase="281" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="15" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="15" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="265" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="3" timeBase="44" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="44" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="44" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="43" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="2" timeBase="43" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="2" timeBase="37" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="1" timeBase="29" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="2" timeBase="27" countDelta="0" countBase="1">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="1" timeBase="27" countDelta="0" countBase="1">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="1" timeBase="25" countDelta="0" countBase="1">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="1" timeBase="25" countDelta="0" countBase="1">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_58" methodSignature="()Z" timeDelta="2" timeBase="23" countDelta="0" countBase="1">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_38" methodSignature="()Z" timeDelta="3" timeBase="22" countDelta="0" countBase="1">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="1" timeBase="22" countDelta="0" countBase="1">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="22" countDelta="0" countBase="1">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="2" timeBase="15" countDelta="0" countBase="1">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="1" timeBase="4" countDelta="0" countBase="1">
                                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="1" timeBase="6" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="list" methodSignature="()Ljason/asSyntax/ListTermImpl;" timeDelta="-10" timeBase="192" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="append" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="-4" timeBase="10" countDelta="0" countBase="3">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" timeDelta="-5" timeBase="6" countDelta="0" countBase="2">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" timeDelta="-5" timeBase="5" countDelta="-2" countBase="2"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="term_in_list" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="48" countDelta="0" countBase="3"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-29" timeBase="284" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-28" timeBase="276" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="14" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="14" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                                            <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-27" timeBase="261" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.RelExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/RelExpr$RelationalOp;Ljason/asSyntax/Term;)V" timeDelta="-1" timeBase="9" countDelta="0" countBase="1">
                                          <node leaf="true" class="jason.asSyntax.BinaryStructure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljava/lang/String;Ljason/asSyntax/Term;)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                                          <node leaf="true" class="jason.asSyntax.RelExpr$RelationalOp$9" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="39" countDelta="0" countBase="1"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="list" methodSignature="()Ljason/asSyntax/ListTermImpl;" timeDelta="-25" timeBase="202" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="append" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="2" timeBase="5" countDelta="0" countBase="4">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="append" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="4" timeBase="3" countDelta="0" countBase="3">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="3" timeBase="2" countDelta="0" countBase="3">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="3" timeBase="2" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="4" timeBase="1" countDelta="0" countBase="3">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="4" timeBase="0" countDelta="0" countBase="3"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term_in_list" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-9" timeBase="41" countDelta="0" countBase="4">
                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="8" countDelta="0" countBase="3">
                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="8" countDelta="0" countBase="3"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-8" timeBase="32" countDelta="0" countBase="4">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-8" timeBase="32" countDelta="0" countBase="4">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-8" timeBase="32" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="28" countDelta="0" countBase="4">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-5" timeBase="28" countDelta="0" countBase="4">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-5" timeBase="23" countDelta="0" countBase="4">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="12" countDelta="0" countBase="4">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-1" timeBase="11" countDelta="0" countBase="4">
                                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="-1" timeBase="10" countDelta="0" countBase="4"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="-3" timeBase="8" countDelta="0" countBase="4">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-3" timeBase="5" countDelta="0" countBase="4">
                                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" timeDelta="-3" timeBase="5" countDelta="0" countBase="4">
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-2" timeBase="4" countDelta="0" countBase="4">
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-3" timeBase="4" countDelta="0" countBase="4">
                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="4"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LogExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSyntax/LogExpr$LogicalOp;Ljason/asSyntax/LogicalFormula;)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="2"/>
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-11" timeBase="360" countDelta="0" countBase="3">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-12" timeBase="349" countDelta="0" countBase="3">
                                  <node leaf="false" class="jason.asSyntax.RelExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/RelExpr$RelationalOp;Ljason/asSyntax/Term;)V" timeDelta="13" timeBase="24" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.BinaryStructure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljava/lang/String;Ljason/asSyntax/Term;)V" timeDelta="6" timeBase="10" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="2" timeBase="4" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.RelExpr$RelationalOp$7" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.RelExpr" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="10" timeBase="41" countDelta="0" countBase="1">
                                    <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="9" timeBase="28" countDelta="0" countBase="1"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="17" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="17" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="9" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="1" timeBase="8" countDelta="0" countBase="1"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-10" timeBase="152" countDelta="0" countBase="4">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-11" timeBase="152" countDelta="0" countBase="4">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-10" timeBase="151" countDelta="0" countBase="4">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-2" timeBase="8" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="7" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="2">
                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-2" timeBase="3" countDelta="0" countBase="1"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-9" timeBase="148" countDelta="0" countBase="4">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-10" timeBase="148" countDelta="0" countBase="4">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-10" timeBase="140" countDelta="0" countBase="4">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="11" timeBase="108" countDelta="0" countBase="2">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="9" timeBase="86" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="5" timeBase="55" countDelta="0" countBase="3">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="5" timeBase="49" countDelta="0" countBase="3">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="5" timeBase="49" countDelta="0" countBase="3">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="5" timeBase="48" countDelta="0" countBase="3">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="4" timeBase="35" countDelta="0" countBase="3">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="4" timeBase="35" countDelta="0" countBase="3">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="4" timeBase="35" countDelta="0" countBase="3">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="4" timeBase="34" countDelta="0" countBase="3">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="4" timeBase="33" countDelta="0" countBase="3">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="4" timeBase="33" countDelta="0" countBase="3">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="4" timeBase="27" countDelta="0" countBase="3">
                                                                        <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="2" timeBase="11" countDelta="0" countBase="1">
                                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="2" timeBase="4" countDelta="0" countBase="1"/>
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="1" timeBase="12" countDelta="0" countBase="3">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="2" timeBase="10" countDelta="0" countBase="3">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="1" timeBase="2" countDelta="0" countBase="3">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="3" timeBase="6" countDelta="0" countBase="1">
                                                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="1" timeBase="6" countDelta="0" countBase="1">
                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                          <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="1" timeBase="6" countDelta="0" countBase="2">
                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="2"/>
                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                                        </node>
                                                                        <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" timeDelta="1" timeBase="3" countDelta="0" countBase="3">
                                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                                                            <node leaf="true" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="java.util.ArrayList" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="7" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="9" countDelta="0" countBase="3">
                                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="5" countDelta="0" countBase="3"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="2" timeBase="7" countDelta="0" countBase="2"/>
                                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="23" countDelta="0" countBase="2"/>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-3" timeBase="18" countDelta="0" countBase="4">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-3" timeBase="17" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="1" timeBase="9" countDelta="0" countBase="4">
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="1" timeBase="17" countDelta="0" countBase="2">
                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="1" timeBase="16" countDelta="0" countBase="2"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-3" timeBase="6" countDelta="0" countBase="4">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-7" timeBase="12" countDelta="0" countBase="2">
                                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-3" timeBase="3" countDelta="0" countBase="2"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-4" timeBase="6" countDelta="0" countBase="2">
                                                        <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="2" countDelta="0" countBase="2">
                                                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="-21" timeBase="52" countDelta="0" countBase="3">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" timeDelta="2" timeBase="29" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getTail" methodSignature="()Ljason/asSyntax/VarTerm;" timeDelta="1" timeBase="5" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="setTail" methodSignature="(Ljason/asSyntax/VarTerm;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="3"/>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="list" methodSignature="()Ljason/asSyntax/ListTermImpl;" timeDelta="-4" timeBase="39" countDelta="0" countBase="1">
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="setNext" methodSignature="(Ljason/asSyntax/Term;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="9" countDelta="0" countBase="2">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="9" countDelta="0" countBase="2">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="3" countDelta="0" countBase="2">
                                                        <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                        <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                                                          <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-21" timeBase="23" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-62" timeBase="67" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-63" timeBase="65" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" timeDelta="-62" timeBase="62" countDelta="-1" countBase="1"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getSourceRef" methodSignature="(Ljason/asSyntax/DefaultTerm;)Ljava/lang/String;" timeDelta="-2" timeBase="23" countDelta="0" countBase="1">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getSourceRef" methodSignature="(Ljason/asSyntax/SourceInfo;)Ljava/lang/String;" timeDelta="-3" timeBase="19" countDelta="0" countBase="1">
                              <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="getBeginSrcLine" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                              <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="getSrcFile" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Rule" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-5" timeBase="66" countDelta="0" countBase="1">
                            <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                            <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-5" timeBase="52" countDelta="0" countBase="1"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getSingletonVars" methodSignature="()Ljava/util/List;" timeDelta="-6" timeBase="148" countDelta="0" countBase="3">
                            <node leaf="true" class="java.util.Map" methodName="entrySet" methodSignature="()Ljava/util/Set;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                            <node leaf="true" class="java.util.stream.Stream" methodName="filter" methodSignature="(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;" timeDelta="-1" timeBase="2" countDelta="0" countBase="3"/>
                            <node leaf="false" class="jason.asSyntax.Rule" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-7" timeBase="114" countDelta="0" countBase="3">
                              <node leaf="true" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="31" countDelta="0" countBase="4"/>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-11" timeBase="103" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-2" timeBase="73" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="1" timeBase="8" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="1" timeBase="8" countDelta="0" countBase="2">
                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="1" timeBase="6" countDelta="0" countBase="2">
                                        <node leaf="false" class="java.util.Map" methodName="containsKey" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="2" countDelta="0" countBase="2">
                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="2" countDelta="0" countBase="2">
                                            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" timeDelta="2" timeBase="0" countDelta="2" countBase="0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2">
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="1" timeBase="11" countDelta="0" countBase="1">
                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                    <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    </node>
                                    <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-5" timeBase="112" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-2" timeBase="54" countDelta="0" countBase="2">
                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="11" countDelta="0" countBase="2">
                                        <node leaf="false" class="java.util.Map" methodName="containsKey" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="2">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-2" timeBase="41" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="0" countBase="2">
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-2" timeBase="33" countDelta="0" countBase="2">
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="20" countDelta="0" countBase="2">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="9" countDelta="0" countBase="2">
                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                              </node>
                                              <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-19" timeBase="34" countDelta="0" countBase="1">
                                  <node leaf="false" class="java.util.Map" methodName="containsKey" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="4" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                  </node>
                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                  </node>
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-6" timeBase="8" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-12" timeBase="16" countDelta="0" countBase="1">
                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-12" timeBase="12" countDelta="-1" countBase="1"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="java.util.logging.Logger" methodName="warning" methodSignature="(Ljava/lang/String;)V" timeDelta="-12" timeBase="1924" countDelta="0" countBase="1">
                            <node leaf="false" class="jason.runtime.MASConsoleLogHandler" methodName="publish" methodSignature="(Ljava/util/logging/LogRecord;)V" timeDelta="14" timeBase="1827" countDelta="0" countBase="1">
                              <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="append" methodSignature="(Ljava/lang/String;Ljava/lang/String;)V" timeDelta="16" timeBase="1813" countDelta="0" countBase="1">
                                <node leaf="true" class="javax.swing.JTextArea" methodName="append" methodSignature="(Ljava/lang/String;)V" timeDelta="16" timeBase="1806" countDelta="0" countBase="1"/>
                                <node leaf="true" class="javax.swing.JFrame" methodName="isVisible" methodSignature="()Z" timeDelta="-2" timeBase="2" countDelta="-1" countBase="1"/>
                              </node>
                              <node leaf="false" class="java.util.logging.Formatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="-3" timeBase="10" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="-2" timeBase="9" countDelta="0" countBase="1">
                                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-3" timeBase="3" countDelta="-1" countBase="1"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="-3" timeBase="11" countDelta="0" countBase="1">
                              <node leaf="true" class="jason.runtime.MASConsoleLogFormatter" methodName="getAgName" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" timeDelta="-3" timeBase="4" countDelta="0" countBase="1"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                        <node leaf="true" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                        <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="add" methodSignature="(Ljason/asSyntax/Plan;)Ljason/asSyntax/Plan;" timeDelta="-2" timeBase="80" countDelta="0" countBase="20">
                          <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="add" methodSignature="(Ljason/asSyntax/Plan;Z)Ljason/asSyntax/Plan;" timeDelta="-3" timeBase="80" countDelta="0" countBase="20">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="20">
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isStructure" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="4" countDelta="0" countBase="1">
                                <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="7" countDelta="0" countBase="24"/>
                            <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" timeDelta="-1" timeBase="1" countDelta="0" countBase="20"/>
                            <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="20"/>
                            <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createStructure" methodSignature="(Ljava/lang/String;[Ljason/asSyntax/Term;)Ljason/asSyntax/Structure;" timeDelta="-2" timeBase="6" countDelta="0" countBase="20">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="3" countDelta="0" countBase="20">
                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="20"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getSingletonVars" methodSignature="()Ljava/util/List;" timeDelta="-3" timeBase="133" countDelta="0" countBase="20">
                          <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" timeDelta="1" timeBase="14" countDelta="0" countBase="20">
                            <node leaf="true" class="jason.asSyntax.Structure" methodName="lambda$getSingletonVars$0" methodSignature="(Ljava/util/Map$Entry;)Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="73"/>
                          </node>
                          <node leaf="true" class="java.util.stream.Stream" methodName="filter" methodSignature="(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;" timeDelta="1" timeBase="1" countDelta="0" countBase="20"/>
                          <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" timeDelta="1" timeBase="0" countDelta="0" countBase="20"/>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-4" timeBase="108" countDelta="0" countBase="20">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="18" countDelta="0" countBase="21">
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                              <node leaf="true" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="41"/>
                              <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="2" countDelta="0" countBase="41"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-2" timeBase="36" countDelta="0" countBase="46">
                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="3" timeBase="12" countDelta="0" countBase="4">
                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="3" timeBase="2" countDelta="0" countBase="4">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="3" timeBase="0" countDelta="0" countBase="4"/>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="0" countBase="6"/>
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="25" countDelta="0" countBase="23">
                                <node leaf="true" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="3"/>
                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="2" countDelta="0" countBase="3"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-3" timeBase="32" countDelta="0" countBase="28">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-7" timeBase="34" countDelta="0" countBase="12">
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="26" countDelta="0" countBase="2"/>
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-5" timeBase="14" countDelta="0" countBase="11">
                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="countVars" methodSignature="(Ljava/util/Map;)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="11"/>
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="2" countDelta="0" countBase="10">
                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="10"/>
                                    </node>
                                    <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-4" timeBase="6" countDelta="0" countBase="11">
                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-4" timeBase="5" countDelta="0" countBase="10"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-5" timeBase="83" countDelta="0" countBase="25">
                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-5" timeBase="82" countDelta="0" countBase="25">
                            <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="25"/>
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-3" timeBase="29" countDelta="0" countBase="53">
                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-3" timeBase="8" countDelta="0" countBase="4"/>
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" timeDelta="-5" timeBase="50" countDelta="0" countBase="29">
                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-4" timeBase="48" countDelta="0" countBase="29"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan" methodSignature="()Ljason/asSyntax/Plan;" timeDelta="-125" timeBase="1981" countDelta="0" countBase="20">
                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                          <node leaf="false" class="jason.asSyntax.Plan" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Pred;Ljason/asSyntax/Trigger;Ljason/asSyntax/LogicalFormula;Ljason/asSyntax/PlanBody;)V" timeDelta="-1" timeBase="10" countDelta="0" countBase="20">
                            <node leaf="false" class="jason.asSyntax.Plan" methodName="setContext" methodSignature="(Ljason/asSyntax/LogicalFormula;)V" timeDelta="1" timeBase="1" countDelta="0" countBase="20">
                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="1" countDelta="0" countBase="20">
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="0" countBase="20"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Plan" methodName="setLabel" methodSignature="(Ljason/asSyntax/Pred;)V" timeDelta="-1" timeBase="3" countDelta="0" countBase="20">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                                <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-2" timeBase="5" countDelta="0" countBase="3"/>
                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="-2" timeBase="4" countDelta="0" countBase="2">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="2">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                </node>
                              </node>
                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="8" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="checkInternalActionsInContext" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSemantics/Agent;)Ljason/asSyntax/InternalActionLiteral;" timeDelta="-1" timeBase="4" countDelta="0" countBase="20">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="checkInternalActionsInContext" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSemantics/Agent;)Ljason/asSyntax/InternalActionLiteral;" timeDelta="-1" timeBase="6" countDelta="0" countBase="8">
                              <node leaf="true" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="checkInternalActionsInContext" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSemantics/Agent;)Ljason/asSyntax/InternalActionLiteral;" timeDelta="-3" timeBase="6" countDelta="0" countBase="4"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-2" timeBase="33" countDelta="0" countBase="22">
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="32" countDelta="0" countBase="22">
                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="22"/>
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="25" countDelta="0" countBase="22">
                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-1" timeBase="27" countDelta="0" countBase="20"/>
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="-1" timeBase="2" countDelta="0" countBase="2">
                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-3" timeBase="48" countDelta="0" countBase="20">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="1" timeBase="11" countDelta="0" countBase="20">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="list" methodSignature="()Ljason/asSyntax/ListTermImpl;" timeDelta="14" timeBase="84" countDelta="0" countBase="1">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="10" timeBase="21" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="10" timeBase="20" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="11" timeBase="7" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="11" timeBase="1" countDelta="0" countBase="1">
                                        <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" timeDelta="12" timeBase="0" countDelta="1" countBase="0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term_in_list" methodSignature="()Ljason/asSyntax/Term;" timeDelta="2" timeBase="54" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="45" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="3" timeBase="44" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="44" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="43" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="3" timeBase="42" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="2" timeBase="36" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="2" timeBase="10" countDelta="0" countBase="1">
                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="1" timeBase="10" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1">
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                </node>
                                                <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="5" countDelta="0" countBase="1">
                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="1">
                                                    <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="1" timeBase="5" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="append" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="1"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="32" countDelta="0" countBase="1">
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-1" timeBase="13" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="6" countDelta="0" countBase="20">
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="4" countDelta="0" countBase="20"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-2" timeBase="17" countDelta="0" countBase="20">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-2" timeBase="16" countDelta="0" countBase="20">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-2" timeBase="13" countDelta="0" countBase="20">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="13" countDelta="0" countBase="20">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="6" countDelta="0" countBase="22">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" timeDelta="-6" timeBase="51" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-5" timeBase="49" countDelta="0" countBase="2">
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="25"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="trigger" methodSignature="()Ljason/asSyntax/Trigger;" timeDelta="-27" timeBase="403" countDelta="0" countBase="20">
                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="9" countDelta="0" countBase="21"/>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-26" timeBase="383" countDelta="0" countBase="20">
                              <node leaf="true" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="7" countDelta="0" countBase="20"/>
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-2" timeBase="36" countDelta="0" countBase="20">
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="36" countDelta="0" countBase="20">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="30" countDelta="0" countBase="20">
                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="20"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-8" timeBase="45" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-8" timeBase="44" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="13" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-1" timeBase="12" countDelta="0" countBase="2">
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="15" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="15" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="13" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="11" countDelta="0" countBase="1">
                                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="6" countDelta="0" countBase="1"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-8" timeBase="28" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-7" timeBase="25" countDelta="0" countBase="2">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-8" timeBase="21" countDelta="0" countBase="2">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-8" timeBase="19" countDelta="0" countBase="2">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-3" timeBase="14" countDelta="0" countBase="2">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-6" timeBase="12" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-6" timeBase="11" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-6" timeBase="10" countDelta="0" countBase="1">
                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-5" timeBase="9" countDelta="0" countBase="1">
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="5" countDelta="0" countBase="1">
                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-3" timeBase="31" countDelta="0" countBase="20">
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="30" countDelta="0" countBase="20">
                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="20"/>
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="23" countDelta="0" countBase="20">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-1" timeBase="23" countDelta="0" countBase="20"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-21" timeBase="295" countDelta="0" countBase="20">
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="34" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-1" timeBase="13" countDelta="0" countBase="3">
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" timeDelta="-1" timeBase="2" countDelta="0" countBase="4"/>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="1" countDelta="0" countBase="20"/>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="6" countDelta="0" countBase="40">
                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="11" countDelta="0" countBase="20"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="-15" timeBase="243" countDelta="0" countBase="20">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="67" countDelta="0" countBase="70">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="64" countDelta="0" countBase="70">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-3" timeBase="63" countDelta="0" countBase="70">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="63" countDelta="0" countBase="70">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="14" countDelta="0" countBase="70">
                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="14" countDelta="0" countBase="70">
                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="70"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="47" countDelta="0" countBase="70">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="list" methodSignature="()Ljason/asSyntax/ListTermImpl;" timeDelta="1" timeBase="80" countDelta="0" countBase="5">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="append" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="5" timeBase="3" countDelta="0" countBase="3">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="3"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="16" countDelta="0" countBase="3">
                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="3"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="5"/>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="10" countDelta="0" countBase="8">
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="9" countDelta="0" countBase="8">
                                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="8">
                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-8" countBase="8"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term_in_list" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="58" countDelta="0" countBase="3">
                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="57" countDelta="0" countBase="3"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="6" countDelta="0" countBase="5"/>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="43" countDelta="0" countBase="65">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-3" timeBase="43" countDelta="0" countBase="65">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="42" countDelta="0" countBase="65">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-3" timeBase="42" countDelta="0" countBase="65">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="41" countDelta="0" countBase="65">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-2" timeBase="34" countDelta="0" countBase="65">
                                                        <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="1" timeBase="11" countDelta="0" countBase="14">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="5" countDelta="0" countBase="14">
                                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" timeDelta="3" timeBase="2" countDelta="0" countBase="14"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="2" countDelta="0" countBase="14"/>
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="14" countDelta="0" countBase="65">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-1" timeBase="13" countDelta="0" countBase="65">
                                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="-1" timeBase="10" countDelta="0" countBase="65"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-1" timeBase="6" countDelta="0" countBase="14"/>
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="-1" timeBase="9" countDelta="0" countBase="60">
                                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="create" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)Ljason/asSyntax/UnnamedVar;" timeDelta="-1" timeBase="10" countDelta="0" countBase="16">
                                                            <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;)V" timeDelta="-1" timeBase="9" countDelta="0" countBase="12">
                                                              <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;I)V" timeDelta="-1" timeBase="7" countDelta="0" countBase="12"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-2" timeBase="18" countDelta="0" countBase="9">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="17" countDelta="0" countBase="9">
                                                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="1" countDelta="0" countBase="9">
                                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="9"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="5" countDelta="0" countBase="9">
                                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="0" countBase="9"/>
                                                              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="9"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="9" countDelta="0" countBase="9">
                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-1" timeBase="8" countDelta="0" countBase="9"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="list" methodSignature="()Ljason/asSyntax/ListTermImpl;" timeDelta="-25" timeBase="269" countDelta="0" countBase="2">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="7" countDelta="0" countBase="2"/>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term_in_list" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-17" timeBase="153" countDelta="0" countBase="3">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-2" timeBase="23" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="22" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="16" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="-1" timeBase="15" countDelta="0" countBase="1">
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-17" timeBase="141" countDelta="0" countBase="3">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-16" timeBase="140" countDelta="0" countBase="3">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-16" timeBase="140" countDelta="0" countBase="3">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-17" timeBase="140" countDelta="0" countBase="3">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-16" timeBase="139" countDelta="0" countBase="3">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-16" timeBase="133" countDelta="0" countBase="3">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="2" timeBase="83" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="2" timeBase="4" countDelta="0" countBase="6">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="3" timeBase="8" countDelta="0" countBase="3">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="4" timeBase="2" countDelta="0" countBase="3">
                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" timeDelta="3" timeBase="0" countDelta="3" countBase="0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="3">
                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-3" countBase="3"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="0" countDelta="3" countBase="0"/>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="-3" timeBase="67" countDelta="0" countBase="3">
                                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="3" countBase="0"/>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-3" timeBase="64" countDelta="0" countBase="3">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="59" countDelta="0" countBase="3">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="59" countDelta="0" countBase="3">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="59" countDelta="0" countBase="3">
                                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="19" countDelta="0" countBase="3"/>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-3" timeBase="38" countDelta="0" countBase="3">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="38" countDelta="0" countBase="3">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-3" timeBase="37" countDelta="0" countBase="3">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-3" timeBase="37" countDelta="0" countBase="3">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-3" timeBase="36" countDelta="0" countBase="3">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="36" countDelta="0" countBase="3">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-4" timeBase="30" countDelta="0" countBase="3">
                                                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                                          <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-4" timeBase="16" countDelta="0" countBase="3">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-4" timeBase="14" countDelta="0" countBase="3">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="-3" timeBase="11" countDelta="0" countBase="3">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="-5" timeBase="14" countDelta="0" countBase="2">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="-6" timeBase="14" countDelta="0" countBase="2">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_55" methodSignature="()Z" timeDelta="-6" timeBase="6" countDelta="0" countBase="2">
                                                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-5" timeBase="5" countDelta="-2" countBase="2"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="7" countDelta="0" countBase="3"/>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="9" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-1" timeBase="7" countDelta="0" countBase="3">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-1" timeBase="5" countDelta="0" countBase="3">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="5" countDelta="0" countBase="3">
                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-16" timeBase="28" countDelta="0" countBase="3">
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-16" timeBase="28" countDelta="0" countBase="3">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-15" timeBase="26" countDelta="0" countBase="3">
                                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-4" timeBase="5" countDelta="0" countBase="3">
                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-4" timeBase="4" countDelta="0" countBase="3">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-3" timeBase="3" countDelta="-3" countBase="3"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-5" timeBase="5" countDelta="0" countBase="3"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-31" timeBase="1444" countDelta="0" countBase="7">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-31" timeBase="1443" countDelta="0" countBase="7">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="8" timeBase="473" countDelta="0" countBase="7">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="9" timeBase="575" countDelta="0" countBase="5">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="10" timeBase="574" countDelta="0" countBase="5">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="9" timeBase="574" countDelta="0" countBase="5">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="10" timeBase="573" countDelta="0" countBase="5">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="9" timeBase="573" countDelta="0" countBase="5">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="10" timeBase="572" countDelta="0" countBase="5">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="11" timeBase="565" countDelta="0" countBase="5">
                                              <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="33" timeBase="349" countDelta="0" countBase="4">
                                                <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="33" timeBase="347" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="32" timeBase="331" countDelta="0" countBase="4">
                                                    <node leaf="false" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="115" timeBase="1251" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.stdlib.literal" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-1" timeBase="7" countDelta="0" countBase="1"/>
                                                    </node>
                                                    <node leaf="true" class="java.lang.Class" methodName="getMethod" methodSignature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" timeDelta="6" timeBase="27" countDelta="0" countBase="1"/>
                                                    <node leaf="true" class="java.lang.reflect.Method" methodName="invoke" methodSignature="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="3" timeBase="20" countDelta="0" countBase="1"/>
                                                    <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="13" timeBase="51" countDelta="0" countBase="1">
                                                <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="12" timeBase="38" countDelta="0" countBase="1"/>
                                                <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="3" timeBase="6" countDelta="0" countBase="1"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="7" countDelta="0" countBase="5">
                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="5" countDelta="0" countBase="5"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="4" countDelta="0" countBase="5">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-2" timeBase="4" countDelta="0" countBase="5">
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="4" countDelta="0" countBase="5">
                                                    <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" timeDelta="-6" timeBase="14" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="5" countDelta="0" countBase="1"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="12" countDelta="0" countBase="5"/>
                                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-3" timeBase="8" countDelta="0" countBase="1">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-2" timeBase="3" countDelta="0" countBase="1"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-17" timeBase="116" countDelta="0" countBase="5">
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="0" countDelta="0" countBase="5"/>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="8" countDelta="0" countBase="10">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="13" countDelta="0" countBase="6">
                                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="6"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="-12" timeBase="89" countDelta="0" countBase="5">
                                                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="0" countBase="5"/>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-10" timeBase="71" countDelta="0" countBase="6">
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="6"/>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-10" timeBase="70" countDelta="0" countBase="6">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-10" timeBase="69" countDelta="0" countBase="6">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-10" timeBase="69" countDelta="0" countBase="6">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-5" timeBase="21" countDelta="0" countBase="6">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-4" timeBase="20" countDelta="0" countBase="6">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="7" countDelta="0" countBase="6">
                                                                <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="2" countDelta="0" countBase="6"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-6" timeBase="47" countDelta="0" countBase="6">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-6" timeBase="46" countDelta="0" countBase="6">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="45" countDelta="0" countBase="6">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-6" timeBase="45" countDelta="0" countBase="6">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="44" countDelta="0" countBase="6">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="43" countDelta="0" countBase="6">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="6" countDelta="0" countBase="6">
                                                                        <node leaf="true" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="1" countDelta="0" countBase="6"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-4" timeBase="36" countDelta="0" countBase="6">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="17" countDelta="0" countBase="6">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-1" timeBase="16" countDelta="0" countBase="6">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="-3" timeBase="15" countDelta="0" countBase="6">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="-2" timeBase="13" countDelta="0" countBase="6">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="-3" timeBase="13" countDelta="0" countBase="6">
                                                                                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_55" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="6"/>
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_58" methodSignature="()Z" timeDelta="-3" timeBase="11" countDelta="0" countBase="6">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_38" methodSignature="()Z" timeDelta="-3" timeBase="10" countDelta="0" countBase="6">
                                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-3" timeBase="10" countDelta="0" countBase="6">
                                                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="9" countDelta="0" countBase="6">
                                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="6">
                                                                                            <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="6"/>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-10" timeBase="28" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-9" timeBase="26" countDelta="0" countBase="1">
                                                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="8" countDelta="0" countBase="1">
                                                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-4" timeBase="13" countDelta="0" countBase="1">
                                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-3" timeBase="12" countDelta="0" countBase="1"/>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-22" timeBase="46" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-22" timeBase="46" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-22" timeBase="44" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-8" timeBase="14" countDelta="0" countBase="2">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-7" timeBase="12" countDelta="0" countBase="2">
                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-6" timeBase="10" countDelta="0" countBase="2">
                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-6" timeBase="10" countDelta="0" countBase="2">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="4" countDelta="0" countBase="2">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="-5" timeBase="5" countDelta="-2" countBase="2"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-22" timeBase="68" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-22" timeBase="67" countDelta="0" countBase="1">
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="2" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="8" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-17" timeBase="54" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="-17" timeBase="54" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" timeDelta="-17" timeBase="52" countDelta="0" countBase="1">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa3_0" methodSignature="(JJ)I" timeDelta="-13" timeBase="45" countDelta="0" countBase="1">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" timeDelta="-14" timeBase="44" countDelta="0" countBase="1">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-13" timeBase="42" countDelta="0" countBase="1">
                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="16"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="6" timeBase="141" countDelta="0" countBase="2">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="6" timeBase="15" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="5" timeBase="15" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="5" timeBase="3" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="5" timeBase="1" countDelta="0" countBase="2">
                                          <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="124" countDelta="0" countBase="2">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="123" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="123" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="122" countDelta="0" countBase="2">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="122" countDelta="0" countBase="2">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="2" timeBase="121" countDelta="0" countBase="2">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="1" timeBase="115" countDelta="0" countBase="2">
                                                <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="1" timeBase="18" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="2" timeBase="17" countDelta="0" countBase="2">
                                                    <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="1" timeBase="4" countDelta="0" countBase="2">
                                                      <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="7" countDelta="0" countBase="2">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="4" countDelta="0" countBase="2">
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                  </node>
                                                  <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="19" countDelta="0" countBase="7">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="19" countDelta="0" countBase="7">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="7">
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="0" countBase="5"/>
                                      <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="7"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="11" countDelta="0" countBase="7">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-4" timeBase="10" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-68" timeBase="1688" countDelta="0" countBase="4">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-41" timeBase="411" countDelta="0" countBase="4">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-19" timeBase="352" countDelta="0" countBase="4">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-20" timeBase="352" countDelta="0" countBase="4">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-20" timeBase="352" countDelta="0" countBase="4">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-20" timeBase="351" countDelta="0" countBase="4">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-21" timeBase="351" countDelta="0" countBase="4">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-20" timeBase="350" countDelta="0" countBase="4">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-21" timeBase="344" countDelta="0" countBase="4">
                                                <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" timeDelta="3" timeBase="0" countDelta="0" countBase="4"/>
                                                <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="-2" timeBase="3" countDelta="0" countBase="4">
                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-2" timeBase="3" countDelta="0" countBase="4">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="2" countDelta="0" countBase="4">
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" timeDelta="-2" timeBase="2" countDelta="-4" countBase="4"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-2" timeBase="124" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="2" timeBase="100" countDelta="0" countBase="4">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="48" countDelta="0" countBase="8">
                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="46" countDelta="0" countBase="8"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="7" countDelta="0" countBase="8">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="14" countDelta="0" countBase="4">
                                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="1" timeBase="1" countDelta="0" countBase="4"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="5" countDelta="0" countBase="4">
                                                        <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="-3" timeBase="3" countDelta="0" countBase="4"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-19" timeBase="193" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-18" timeBase="192" countDelta="0" countBase="4">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="19" countDelta="0" countBase="4">
                                                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="4"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="-18" timeBase="172" countDelta="0" countBase="4">
                                                      <node leaf="true" class="java.lang.Class" methodName="getMethod" methodSignature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" timeDelta="1" timeBase="21" countDelta="0" countBase="1"/>
                                                      <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                      <node leaf="true" class="java.lang.reflect.Method" methodName="invoke" methodSignature="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="16" countDelta="0" countBase="1"/>
                                                      <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                      <node leaf="true" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="-67" timeBase="628" countDelta="0" countBase="1"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-21" timeBase="57" countDelta="0" countBase="4">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-21" timeBase="57" countDelta="0" countBase="4">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-2" timeBase="25" countDelta="0" countBase="4">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" timeDelta="-1" timeBase="24" countDelta="0" countBase="4">
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-3" timeBase="4" countDelta="0" countBase="20">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-4" timeBase="4" countDelta="0" countBase="20"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-105" timeBase="5095" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="2" timeBase="3808" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$LogicalOp" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="4" timeBase="132" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.LogExpr$LogicalOp$4" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="3" timeBase="7" countDelta="0" countBase="1"/>
                                      <node leaf="false" class="jason.asSyntax.LogExpr$LogicalOp$1" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="16" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.LogExpr$LogicalOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;ILjason/asSyntax/LogExpr$1;)V" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                          <node leaf="true" class="jason.asSyntax.LogExpr$LogicalOp" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-4" timeBase="77" countDelta="0" countBase="1">
                                      <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="-2" timeBase="8" countDelta="0" countBase="1"/>
                                      <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="-2" timeBase="57" countDelta="0" countBase="1"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr$LogicalOp;Ljason/asSyntax/LogicalFormula;)V" timeDelta="-14" timeBase="45" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.BinaryStructure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Term;)V" timeDelta="-3" timeBase="25" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="-3" timeBase="9" countDelta="0" countBase="1">
                                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-44" timeBase="795" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-3" timeBase="23" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="22" countDelta="0" countBase="1">
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="11" countDelta="0" countBase="1"/>
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="8" countDelta="0" countBase="1">
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-42" timeBase="772" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-41" timeBase="770" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-41" timeBase="770" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-42" timeBase="770" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-42" timeBase="769" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-41" timeBase="768" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-41" timeBase="760" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    </node>
                                                    <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-41" timeBase="649" countDelta="0" countBase="1">
                                                      <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-41" timeBase="649" countDelta="0" countBase="1">
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="15" countDelta="0" countBase="1"/>
                                                        <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="-41" timeBase="633" countDelta="0" countBase="1">
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="11" timeBase="1" countDelta="0" countBase="1"/>
                                                          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                          <node leaf="true" class="java.lang.reflect.Method" methodName="invoke" methodSignature="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="15" countDelta="0" countBase="1"/>
                                                          <node leaf="true" class="java.lang.Class" methodName="getMethod" methodSignature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" timeDelta="-2" timeBase="20" countDelta="0" countBase="1"/>
                                                          <node leaf="false" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="-49" timeBase="590" countDelta="0" countBase="1">
                                                            <node leaf="true" class="jason.stdlib.list" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogicalFormula;Ljason/asSyntax/LogExpr$LogicalOp;Ljason/asSyntax/LogicalFormula;)V" timeDelta="-3" timeBase="18" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.BinaryStructure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljava/lang/String;Ljason/asSyntax/Term;)V" timeDelta="-2" timeBase="12" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="addTerm" methodSignature="(Ljason/asSyntax/Term;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-105" timeBase="1265" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-103" timeBase="1263" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="52" countDelta="0" countBase="1"/>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-104" timeBase="1211" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-104" timeBase="1210" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-104" timeBase="1210" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-102" timeBase="1208" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-103" timeBase="1208" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-104" timeBase="1208" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-102" timeBase="1198" countDelta="0" countBase="1">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                    <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="9" countDelta="0" countBase="1">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="7" countDelta="0" countBase="1">
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" timeDelta="-2" timeBase="4" countDelta="0" countBase="1"/>
                                                      </node>
                                                      <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="13" countDelta="0" countBase="1"/>
                                                    <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-14" timeBase="209" countDelta="0" countBase="1">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="-14" timeBase="185" countDelta="0" countBase="1">
                                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="59" countDelta="0" countBase="3">
                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="57" countDelta="0" countBase="3">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="57" countDelta="0" countBase="3">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="56" countDelta="0" countBase="3">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="17" countDelta="0" countBase="3">
                                                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="15" countDelta="0" countBase="3"/>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="39" countDelta="0" countBase="3">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="39" countDelta="0" countBase="3">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="38" countDelta="0" countBase="3">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-4" timeBase="37" countDelta="0" countBase="3">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="37" countDelta="0" countBase="3">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-5" timeBase="37" countDelta="0" countBase="3">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="7" countDelta="0" countBase="3">
                                                                              <node leaf="false" class="jason.asSemantics.Agent" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="3" countDelta="0" countBase="3">
                                                                                <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                                                              </node>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-3" timeBase="28" countDelta="0" countBase="3">
                                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="1" timeBase="15" countDelta="0" countBase="3">
                                                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="1" timeBase="14" countDelta="0" countBase="3"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="-3" timeBase="10" countDelta="0" countBase="3"/>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-84" timeBase="957" countDelta="0" countBase="1">
                                                      <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-85" timeBase="956" countDelta="0" countBase="1">
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="7" timeBase="31" countDelta="0" countBase="1">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="2" timeBase="7" countDelta="0" countBase="3">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="3">
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="3"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                        <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="-91" timeBase="923" countDelta="0" countBase="1">
                                                          <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-3" timeBase="4" countDelta="0" countBase="1"/>
                                                          <node leaf="true" class="java.lang.reflect.Method" methodName="invoke" methodSignature="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-4" timeBase="18" countDelta="0" countBase="1"/>
                                                          <node leaf="true" class="java.lang.Class" methodName="getMethod" methodSignature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" timeDelta="-5" timeBase="26" countDelta="0" countBase="1"/>
                                                          <node leaf="true" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="-79" timeBase="867" countDelta="0" countBase="1"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-90" timeBase="1061" countDelta="0" countBase="18">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="10" timeBase="670" countDelta="0" countBase="7">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_term" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="14" timeBase="315" countDelta="0" countBase="7">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_factor" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="14" timeBase="315" countDelta="0" countBase="7">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="body_formula" methodSignature="()Ljava/lang/Object;" timeDelta="14" timeBase="314" countDelta="0" countBase="7">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="304" countDelta="0" countBase="7">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="12" timeBase="304" countDelta="0" countBase="7">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="12" timeBase="304" countDelta="0" countBase="7">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="296" countDelta="0" countBase="7">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="295" countDelta="0" countBase="7">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="295" countDelta="0" countBase="7">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="294" countDelta="0" countBase="7">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="13" timeBase="294" countDelta="0" countBase="7">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="13" timeBase="293" countDelta="0" countBase="7">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="13" timeBase="287" countDelta="0" countBase="7">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="23" timeBase="176" countDelta="0" countBase="3">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="21" timeBase="160" countDelta="0" countBase="3">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="8" timeBase="57" countDelta="0" countBase="8">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="7" timeBase="55" countDelta="0" countBase="8">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="8" timeBase="54" countDelta="0" countBase="8">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="9" timeBase="53" countDelta="0" countBase="8">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="8" timeBase="35" countDelta="0" countBase="8">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="7" timeBase="35" countDelta="0" countBase="8">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="8" timeBase="34" countDelta="0" countBase="8">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="9" timeBase="33" countDelta="0" countBase="8">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="8" timeBase="33" countDelta="0" countBase="8">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="8" timeBase="32" countDelta="0" countBase="8">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="8" timeBase="26" countDelta="0" countBase="8">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="5" timeBase="14" countDelta="0" countBase="8">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="5" timeBase="13" countDelta="0" countBase="8">
                                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="5" timeBase="2" countDelta="0" countBase="8">
                                                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="41" timeBase="15" countDelta="0" countBase="1">
                                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="41" timeBase="12" countDelta="0" countBase="1">
                                                                                            <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="1" countDelta="0" countBase="1">
                                                                                              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                            </node>
                                                                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="3" timeBase="6" countDelta="0" countBase="7">
                                                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="2" timeBase="3" countDelta="0" countBase="7">
                                                                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" timeDelta="2" timeBase="2" countDelta="0" countBase="7">
                                                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="2" timeBase="2" countDelta="0" countBase="7">
                                                                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="2" timeBase="1" countDelta="0" countBase="7"/>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="2" timeBase="7" countDelta="0" countBase="1">
                                                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                                                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="1" timeBase="13" countDelta="0" countBase="1">
                                                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="7" countDelta="0" countBase="1">
                                                                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                                                                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="3"/>
                                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="10" timeBase="400" countDelta="0" countBase="3">
                                                          <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="10" timeBase="399" countDelta="0" countBase="3">
                                                            <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="13" timeBase="372" countDelta="0" countBase="3">
                                                              <node leaf="true" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="36" timeBase="1026" countDelta="0" countBase="1"/>
                                                              <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="2" timeBase="7" countDelta="0" countBase="1"/>
                                                              <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="2" timeBase="2" countDelta="0" countBase="1"/>
                                                              <node leaf="true" class="java.lang.Class" methodName="getMethod" methodSignature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" timeDelta="-1" timeBase="46" countDelta="0" countBase="1"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="25" countDelta="0" countBase="3">
                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="7" countDelta="0" countBase="7">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="6" countDelta="0" countBase="7">
                                                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-1" timeBase="5" countDelta="0" countBase="7">
                                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="4" countDelta="0" countBase="7"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="11" countDelta="0" countBase="4"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-3" timeBase="13" countDelta="0" countBase="4">
                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="12" countDelta="0" countBase="4">
                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="2" countDelta="0" countBase="4"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="6" timeBase="6" countDelta="0" countBase="2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="6" timeBase="5" countDelta="0" countBase="2">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="2" countDelta="0" countBase="2">
                                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="0" countDelta="0" countBase="2"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;)V" timeDelta="1" timeBase="4" countDelta="0" countBase="7"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-2" timeBase="32" countDelta="0" countBase="4">
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="32" countDelta="0" countBase="4">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="15" countDelta="0" countBase="5">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" timeDelta="-3" timeBase="23" countDelta="0" countBase="3">
                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-2" timeBase="21" countDelta="0" countBase="3"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-4" timeBase="584" countDelta="0" countBase="4">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="20" timeBase="416" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_term" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="21" timeBase="415" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_factor" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="21" timeBase="414" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="body_formula" methodSignature="()Ljava/lang/Object;" timeDelta="20" timeBase="414" countDelta="0" countBase="1">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="21" timeBase="406" countDelta="0" countBase="1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="22" timeBase="405" countDelta="0" countBase="1">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="21" timeBase="405" countDelta="0" countBase="1">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="21" timeBase="405" countDelta="0" countBase="1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="20" timeBase="404" countDelta="0" countBase="1">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="21" timeBase="403" countDelta="0" countBase="1">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="21" timeBase="403" countDelta="0" countBase="1">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="21" timeBase="402" countDelta="0" countBase="1">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="20" timeBase="402" countDelta="0" countBase="1">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="9" timeBase="395" countDelta="0" countBase="1">
                                                            <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="12" timeBase="1" countDelta="0" countBase="1">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="3" timeBase="327" countDelta="0" countBase="1">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="2" timeBase="308" countDelta="0" countBase="1">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="74" countDelta="0" countBase="4">
                                                                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="70" countDelta="0" countBase="4"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="13" countDelta="0" countBase="1">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-1" timeBase="11" countDelta="0" countBase="1">
                                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-1" timeBase="8" countDelta="0" countBase="1">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="8" countDelta="0" countBase="1">
                                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                            <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                            <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-2" timeBase="39" countDelta="0" countBase="1">
                                                              <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-2" timeBase="39" countDelta="0" countBase="1">
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-3" timeBase="33" countDelta="0" countBase="1">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="1" countDelta="0" countBase="1">
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="6" countDelta="0" countBase="1">
                                                            <node leaf="true" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="setBodyNext" methodSignature="(Ljason/asSyntax/PlanBody;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="25" countDelta="0" countBase="1">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="23" countDelta="0" countBase="1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="5" countDelta="0" countBase="1">
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="9" countDelta="0" countBase="1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" timeDelta="-1" timeBase="8" countDelta="0" countBase="1">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-1" timeBase="7" countDelta="0" countBase="1"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_term" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-8" timeBase="472" countDelta="0" countBase="4">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_factor" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-10" timeBase="472" countDelta="0" countBase="4">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="body_formula" methodSignature="()Ljava/lang/Object;" timeDelta="-9" timeBase="471" countDelta="0" countBase="4">
                                      <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="4"/>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-8" timeBase="463" countDelta="0" countBase="4">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-9" timeBase="463" countDelta="0" countBase="4">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-8" timeBase="462" countDelta="0" countBase="4">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-2" timeBase="38" countDelta="0" countBase="2">
                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="38" countDelta="0" countBase="2">
                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="31" countDelta="0" countBase="2">
                                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-2" timeBase="31" countDelta="0" countBase="2"/>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-8" timeBase="443" countDelta="0" countBase="4">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="439" countDelta="0" countBase="4">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="439" countDelta="0" countBase="4">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="439" countDelta="0" countBase="4">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="438" countDelta="0" countBase="4">
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-4" timeBase="437" countDelta="0" countBase="4">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="6" countDelta="0" countBase="4">
                                                          <node leaf="true" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-2" timeBase="428" countDelta="0" countBase="4">
                                                          <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="26" timeBase="409" countDelta="0" countBase="2">
                                                            <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="27" timeBase="408" countDelta="0" countBase="2">
                                                              <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="26" timeBase="382" countDelta="0" countBase="2">
                                                                <node leaf="true" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="42" timeBase="716" countDelta="0" countBase="1"/>
                                                                <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="2" countBase="0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="25" countDelta="0" countBase="2">
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="5" countDelta="0" countBase="5"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-1" timeBase="23" countDelta="0" countBase="2">
                                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="22" countDelta="0" countBase="2">
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="21" countDelta="0" countBase="2">
                                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="10" countDelta="0" countBase="4"/>
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-14" timeBase="185" countDelta="0" countBase="4">
                                                            <node leaf="true" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="-14" timeBase="168" countDelta="0" countBase="4">
                                                              <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="0" countBase="4"/>
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-6" timeBase="65" countDelta="0" countBase="10">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="62" countDelta="0" countBase="10">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="62" countDelta="0" countBase="10">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-6" timeBase="62" countDelta="0" countBase="10">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="18" countDelta="0" countBase="10">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="17" countDelta="0" countBase="10">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="6" countDelta="0" countBase="10">
                                                                            <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="10">
                                                                              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="10"/>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="43" countDelta="0" countBase="10">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="42" countDelta="0" countBase="10">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-6" timeBase="41" countDelta="0" countBase="10">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="41" countDelta="0" countBase="10">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-7" timeBase="41" countDelta="0" countBase="10">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-7" timeBase="40" countDelta="0" countBase="10">
                                                                                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="6" countDelta="0" countBase="10"/>
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-5" timeBase="32" countDelta="0" countBase="10">
                                                                                    <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="1" timeBase="12" countDelta="0" countBase="1">
                                                                                      <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="6" countDelta="0" countBase="1">
                                                                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
                                                                                    <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="-1" timeBase="7" countDelta="0" countBase="9">
                                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-1" timeBase="4" countDelta="0" countBase="9">
                                                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" timeDelta="-1" timeBase="3" countDelta="0" countBase="9">
                                                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-1" timeBase="3" countDelta="0" countBase="9">
                                                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-2" timeBase="3" countDelta="0" countBase="9">
                                                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="-1" timeBase="2" countDelta="0" countBase="9"/>
                                                                                            </node>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-5" timeBase="20" countDelta="0" countBase="10">
                                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-4" timeBase="18" countDelta="0" countBase="10">
                                                                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="1" timeBase="0" countDelta="0" countBase="10"/>
                                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="-4" timeBase="16" countDelta="0" countBase="10">
                                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="10"/>
                                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="-5" timeBase="17" countDelta="0" countBase="9">
                                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="-5" timeBase="17" countDelta="0" countBase="9">
                                                                                              <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_55" methodSignature="()Z" timeDelta="2" timeBase="0" countDelta="0" countBase="9"/>
                                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_58" methodSignature="()Z" timeDelta="-6" timeBase="15" countDelta="0" countBase="9">
                                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_38" methodSignature="()Z" timeDelta="-7" timeBase="14" countDelta="0" countBase="9">
                                                                                                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-8" timeBase="14" countDelta="0" countBase="9"/>
                                                                                                </node>
                                                                                              </node>
                                                                                            </node>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="23" countDelta="0" countBase="7">
                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="1" timeBase="22" countDelta="0" countBase="7"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_term" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-93" timeBase="789" countDelta="0" countBase="18">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="plan_body_factor" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-93" timeBase="789" countDelta="0" countBase="18">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="22" countDelta="0" countBase="18">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="22" countDelta="0" countBase="18">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="15" countDelta="0" countBase="18">
                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" timeDelta="-1" timeBase="19" countDelta="0" countBase="13">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="13"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-1" timeBase="17" countDelta="0" countBase="13"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="body_formula" methodSignature="()Ljava/lang/Object;" timeDelta="-93" timeBase="765" countDelta="0" countBase="18">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-92" timeBase="756" countDelta="0" countBase="18">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-93" timeBase="756" countDelta="0" countBase="18">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-92" timeBase="755" countDelta="0" countBase="18">
                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-1" timeBase="27" countDelta="0" countBase="5"/>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-92" timeBase="747" countDelta="0" countBase="18">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-92" timeBase="746" countDelta="0" countBase="18">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-94" timeBase="746" countDelta="0" countBase="18">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-94" timeBase="746" countDelta="0" countBase="18">
                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-94" timeBase="745" countDelta="0" countBase="18">
                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-94" timeBase="744" countDelta="0" countBase="18">
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="6" countDelta="0" countBase="18">
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" timeDelta="-1" timeBase="2" countDelta="0" countBase="18"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-93" timeBase="737" countDelta="0" countBase="18">
                                                      <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="2" timeBase="1" countDelta="0" countBase="16"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="2" timeBase="13" countDelta="0" countBase="2">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="12" countDelta="0" countBase="2">
                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="2" timeBase="5" countDelta="0" countBase="2">
                                                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="1" countDelta="0" countBase="2">
                                                              <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" timeDelta="-15" timeBase="218" countDelta="0" countBase="16">
                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" timeDelta="-14" timeBase="200" countDelta="0" countBase="16">
                                                          <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="0" countBase="16"/>
                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-5" timeBase="75" countDelta="0" countBase="41">
                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="73" countDelta="0" countBase="41">
                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="73" countDelta="0" countBase="41">
                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-5" timeBase="72" countDelta="0" countBase="41">
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="52" countDelta="0" countBase="41">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="string" methodSignature="()Ljason/asSyntax/StringTerm;" timeDelta="1" timeBase="46" countDelta="0" countBase="2">
                                                                      <node leaf="true" class="java.lang.String" methodName="replaceAll" methodSignature="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" timeDelta="1" timeBase="15" countDelta="0" countBase="4"/>
                                                                      <node leaf="true" class="java.lang.String" methodName="substring" methodSignature="(II)Ljava/lang/String;" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
                                                                      <node leaf="true" class="java.lang.String" methodName="length" methodSignature="()I" timeDelta="-1" timeBase="2" countDelta="0" countBase="2"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="46" countDelta="0" countBase="38">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="46" countDelta="0" countBase="38">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="45" countDelta="0" countBase="38">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" timeDelta="-2" timeBase="45" countDelta="0" countBase="38">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-2" timeBase="44" countDelta="0" countBase="38">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="37" countDelta="0" countBase="38">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="16" timeBase="37" countDelta="0" countBase="3">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="16" timeBase="36" countDelta="0" countBase="3">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="19" timeBase="1" countDelta="0" countBase="3">
                                                                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="6" countDelta="0" countBase="3">
                                                                                      <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="0" countBase="3"/>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-2" timeBase="26" countDelta="0" countBase="3">
                                                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="1" timeBase="42" countDelta="0" countBase="1">
                                                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" timeDelta="2" timeBase="39" countDelta="0" countBase="1">
                                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa3_0" methodSignature="(JJ)I" timeDelta="2" timeBase="37" countDelta="0" countBase="1">
                                                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" timeDelta="2" timeBase="37" countDelta="0" countBase="1">
                                                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="1" timeBase="35" countDelta="0" countBase="1"/>
                                                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                            </node>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-2" timeBase="11" countDelta="0" countBase="2"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" timeDelta="1" timeBase="0" countDelta="0" countBase="3"/>
                                                                                <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-1" timeBase="14" countDelta="0" countBase="3">
                                                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="9" countDelta="0" countBase="3"/>
                                                                                  <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="3">
                                                                                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="2">
                                                                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="15" countDelta="0" countBase="38"/>
                                                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="-1" timeBase="8" countDelta="0" countBase="37"/>
                                                                                <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" timeDelta="-3" timeBase="9" countDelta="0" countBase="3">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-3" timeBase="8" countDelta="0" countBase="3">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-2" timeBase="7" countDelta="0" countBase="3">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" timeDelta="-7" timeBase="11" countDelta="0" countBase="1">
                                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="-7" timeBase="7" countDelta="-1" countBase="1"/>
                                                                                      </node>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-4" timeBase="16" countDelta="0" countBase="3">
                                                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-5" timeBase="16" countDelta="0" countBase="3">
                                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-5" timeBase="14" countDelta="0" countBase="3">
                                                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" timeDelta="-5" timeBase="6" countDelta="0" countBase="2">
                                                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" timeDelta="-5" timeBase="5" countDelta="0" countBase="2"/>
                                                                                      </node>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rule_plan_term" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-10" timeBase="234" countDelta="0" countBase="1">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="trigger" methodSignature="()Ljason/asSyntax/Trigger;" timeDelta="10" timeBase="52" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="10" timeBase="43" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="var" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/VarTerm;" timeDelta="5" timeBase="15" countDelta="0" countBase="2">
                                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="2"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="1">
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_3" methodSignature="(I)Z" timeDelta="2" timeBase="23" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_3" methodSignature="()Z" timeDelta="2" timeBase="20" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_15" methodSignature="()Z" timeDelta="1" timeBase="20" countDelta="0" countBase="1">
                                                                            <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_31" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.Trigger" methodName="getType" methodSignature="()Ljason/asSyntax/Trigger$TEType;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAddition" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_2" methodSignature="(I)Z" timeDelta="-16" timeBase="126" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_2" methodSignature="()Z" timeDelta="-15" timeBase="117" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_11" methodSignature="()Z" timeDelta="-2" timeBase="11" countDelta="0" countBase="1">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-1" timeBase="10" countDelta="0" countBase="1">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="9" countDelta="0" countBase="1">
                                                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_12" methodSignature="()Z" timeDelta="-8" timeBase="96" countDelta="0" countBase="1">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_27" methodSignature="()Z" timeDelta="-1" timeBase="17" countDelta="0" countBase="1">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_42" methodSignature="()Z" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_15" methodSignature="()Z" timeDelta="-5" timeBase="71" countDelta="0" countBase="1">
                                                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_30" methodSignature="()Z" timeDelta="-4" timeBase="68" countDelta="0" countBase="1">
                                                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_45" methodSignature="()Z" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_46" methodSignature="()Z" timeDelta="-2" timeBase="28" countDelta="0" countBase="1">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="-1" timeBase="27" countDelta="0" countBase="1">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_55" methodSignature="()Z" timeDelta="-2" timeBase="26" countDelta="0" countBase="1">
                                                                                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-1" timeBase="23" countDelta="0" countBase="1"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_44" methodSignature="()Z" timeDelta="-3" timeBase="14" countDelta="0" countBase="1">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-1" timeBase="12" countDelta="0" countBase="1">
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="12" countDelta="0" countBase="1">
                                                                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
                                                                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" timeDelta="-3" timeBase="17" countDelta="0" countBase="1">
                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" timeDelta="-2" timeBase="16" countDelta="0" countBase="1">
                                                                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_36" methodSignature="()Z" timeDelta="-3" timeBase="14" countDelta="0" countBase="1">
                                                                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_41" methodSignature="()Z" timeDelta="-2" timeBase="13" countDelta="0" countBase="1">
                                                                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_58" methodSignature="()Z" timeDelta="-2" timeBase="12" countDelta="0" countBase="1">
                                                                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_38" methodSignature="()Z" timeDelta="-2" timeBase="11" countDelta="0" countBase="1">
                                                                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" timeDelta="-2" timeBase="10" countDelta="0" countBase="1">
                                                                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-2" timeBase="10" countDelta="0" countBase="1">
                                                                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-1" timeBase="4" countDelta="0" countBase="1">
                                                                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                                </node>
                                                                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="4" countDelta="0" countBase="1">
                                                                                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="-1" timeBase="3" countDelta="0" countBase="1">
                                                                                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                                                  </node>
                                                                                                </node>
                                                                                              </node>
                                                                                            </node>
                                                                                          </node>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" timeDelta="-3" timeBase="19" countDelta="0" countBase="41">
                                                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" timeDelta="-3" timeBase="18" countDelta="0" countBase="41">
                                                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" timeDelta="-1" timeBase="9" countDelta="0" countBase="41">
                                                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-1" timeBase="8" countDelta="0" countBase="39"/>
                                                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" timeDelta="-5" timeBase="15" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" timeDelta="-5" timeBase="13" countDelta="0" countBase="1">
                                                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" timeDelta="-4" timeBase="11" countDelta="0" countBase="1">
                                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" timeDelta="-3" timeBase="9" countDelta="0" countBase="1"/>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-112" timeBase="708" countDelta="0" countBase="13">
                                                        <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Structure;Ljason/asSemantics/Agent;)V" timeDelta="-111" timeBase="707" countDelta="0" countBase="13">
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="30" countDelta="0" countBase="13">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="0" countDelta="0" countBase="2"/>
                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="6" countDelta="0" countBase="29"/>
                                                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="13"/>
                                                            <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-10" timeBase="30" countDelta="0" countBase="1">
                                                              <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="clone" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="-10" timeBase="27" countDelta="0" countBase="1">
                                                                <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;Z)V" timeDelta="1" timeBase="6" countDelta="0" countBase="1">
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-11" timeBase="18" countDelta="0" countBase="1">
                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-11" timeBase="17" countDelta="0" countBase="1">
                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" timeDelta="-10" timeBase="15" countDelta="0" countBase="1">
                                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-10" timeBase="14" countDelta="0" countBase="1">
                                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-9" timeBase="13" countDelta="0" countBase="1">
                                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-11" timeBase="13" countDelta="0" countBase="1">
                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" timeDelta="-110" timeBase="675" countDelta="0" countBase="13">
                                                            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="1" timeBase="0" countDelta="0" countBase="26"/>
                                                            <node leaf="false" class="java.lang.reflect.Method" methodName="invoke" methodSignature="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="16" countDelta="0" countBase="2">
                                                              <node leaf="false" class="jason.stdlib.print" methodName="create" methodSignature="()Ljason/asSemantics/InternalAction;" timeDelta="1" timeBase="12" countDelta="0" countBase="1">
                                                                <node leaf="true" class="jason.stdlib.print" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="3" timeBase="7" countDelta="0" countBase="1"/>
                                                              </node>
                                                              <node leaf="false" class="jason.stdlib.signal" methodName="create" methodSignature="()Ljason/asSemantics/InternalAction;" timeDelta="-1" timeBase="9" countDelta="0" countBase="1">
                                                                <node leaf="true" class="jason.stdlib.signal" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" timeDelta="-2" timeBase="10" countDelta="0" countBase="5"/>
                                                            <node leaf="false" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-4" timeBase="21" countDelta="0" countBase="5">
                                                              <node leaf="false" class="jason.stdlib.drop_intention" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-6" timeBase="14" countDelta="0" countBase="1">
                                                                <node leaf="true" class="jason.asSemantics.DefaultInternalAction" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-3" timeBase="5" countDelta="0" countBase="1"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Class" methodName="getMethod" methodSignature="(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" timeDelta="-7" timeBase="46" countDelta="0" countBase="7"/>
                                                            <node leaf="false" class="java.lang.Class" methodName="forName" methodSignature="(Ljava/lang/String;)Ljava/lang/Class;" timeDelta="-197" timeBase="1166" countDelta="0" countBase="7">
                                                              <node leaf="true" class="jason.stdlib.print" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-1" timeBase="2" countDelta="0" countBase="1"/>
                                                              <node leaf="true" class="jason.stdlib.signal" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-1" timeBase="5" countDelta="0" countBase="1"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="4" timeBase="190" countDelta="0" countBase="1">
      <node leaf="true" class="java.util.logging.Logger" methodName="getLogger" methodSignature="(Ljava/lang/String;)Ljava/util/logging/Logger;" timeDelta="3" timeBase="67" countDelta="0" countBase="1"/>
      <node leaf="true" class="java.lang.Class" methodName="getName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="52" countDelta="0" countBase="1"/>
    </node>
  </node>
  <node leaf="false" class="java.util.concurrent.ThreadPoolExecutor$Worker" methodName="run" methodSignature="()V" timeDelta="64" timeBase="374" countDelta="0" countBase="1">
    <node leaf="false" class="jason.environment.Environment$1" methodName="run" methodSignature="()V" timeDelta="63" timeBase="372" countDelta="0" countBase="1">
      <node leaf="false" class="DebugEnvironment" methodName="executeAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;)Z" timeDelta="75" timeBase="327" countDelta="0" countBase="1">
        <node leaf="false" class="java.util.logging.Logger" methodName="info" methodSignature="(Ljava/lang/String;)V" timeDelta="58" timeBase="223" countDelta="0" countBase="1">
          <node leaf="false" class="jason.runtime.MASConsoleLogHandler" methodName="publish" methodSignature="(Ljava/util/logging/LogRecord;)V" timeDelta="47" timeBase="178" countDelta="0" countBase="1">
            <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="append" methodSignature="(Ljava/lang/String;Ljava/lang/String;)V" timeDelta="47" timeBase="166" countDelta="0" countBase="1">
              <node leaf="true" class="javax.swing.JTextArea" methodName="append" methodSignature="(Ljava/lang/String;)V" timeDelta="46" timeBase="163" countDelta="0" countBase="1"/>
              <node leaf="true" class="javax.swing.JFrame" methodName="isVisible" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              <node leaf="true" class="javax.swing.JTextArea" methodName="getDocument" methodSignature="()Ljavax/swing/text/Document;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            </node>
            <node leaf="true" class="java.util.logging.Formatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" timeDelta="-1" timeBase="9" countDelta="0" countBase="1"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="6" timeBase="38" countDelta="0" countBase="1">
          <node leaf="true" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" timeDelta="3" timeBase="19" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
        </node>
        <node leaf="false" class="jason.environment.Environment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" timeDelta="3" timeBase="48" countDelta="0" countBase="1">
          <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" timeDelta="3" timeBase="43" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="2" timeBase="9" countDelta="0" countBase="1"/>
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="2"/>
            <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" timeDelta="-1" timeBase="6" countDelta="0" countBase="1"/>
          </node>
        </node>
      </node>
    </node>
  </node>
  <node leaf="false" class="java.awt.EventDispatchThread" methodName="run" methodSignature="()V" timeDelta="-178" timeBase="2307" countDelta="0" countBase="1">
    <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS$6" methodName="actionPerformed" methodSignature="(Ljava/awt/event/ActionEvent;)V" timeDelta="-178" timeBase="2307" countDelta="0" countBase="1">
      <node leaf="true" class="jason.runtime.MASConsoleGUI" methodName="setPause" methodSignature="(Z)V" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
      <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="finish" methodSignature="(IZI)V" timeDelta="-179" timeBase="2282" countDelta="0" countBase="1">
        <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS$9" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;IZI)V" timeDelta="1" timeBase="29" countDelta="0" countBase="1">
          <node leaf="true" class="java.lang.Thread" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="2" timeBase="16" countDelta="0" countBase="1"/>
        </node>
        <node leaf="true" class="java.util.concurrent.atomic.AtomicBoolean" methodName="getAndSet" methodSignature="(Z)Z" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
        <node leaf="true" class="jason.infra.centralised.RunCentralisedMAS$8" methodName="&lt;init&gt;" methodSignature="(Ljason/infra/centralised/RunCentralisedMAS;II)V" timeDelta="-1" timeBase="35" countDelta="0" countBase="1"/>
      </node>
    </node>
  </node>
  <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS$9" methodName="run" methodSignature="()V" timeDelta="-1653" timeBase="8791" countDelta="0" countBase="1">
    <node leaf="false" class="jason.infra.centralised.RunCentralisedMAS" methodName="stopAgs" methodSignature="(I)V" timeDelta="85" timeBase="261" countDelta="0" countBase="1">
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="stopAg" methodSignature="()V" timeDelta="61" timeBase="158" countDelta="0" countBase="1">
        <node leaf="false" class="jason.asSemantics.Agent" methodName="stopAg" methodSignature="()V" timeDelta="40" timeBase="106" countDelta="0" countBase="1">
          <node leaf="false" class="jason.architecture.MindInspectorWebImpl" methodName="removeAg" methodSignature="(Ljason/asSemantics/Agent;)V" timeDelta="27" timeBase="44" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="10" timeBase="18" countDelta="0" countBase="2"/>
            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" timeDelta="2" timeBase="2" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          </node>
          <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" timeDelta="2" timeBase="8" countDelta="0" countBase="1"/>
          <node leaf="true" class="jason.bb.BeliefBase" methodName="getLock" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          <node leaf="true" class="jason.bb.BeliefBase" methodName="stop" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
          <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
        </node>
        <node leaf="true" class="java.lang.Thread" methodName="interrupt" methodSignature="()V" timeDelta="3" timeBase="14" countDelta="0" countBase="1"/>
        <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" timeDelta="2" timeBase="9" countDelta="0" countBase="1">
          <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="getUserAgArch" methodSignature="()Ljason/architecture/AgArch;" timeDelta="1" timeBase="2" countDelta="0" countBase="1">
          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
        </node>
      </node>
      <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="delAg" methodSignature="(Ljava/lang/String;)Ljason/infra/centralised/CentralisedAgArch;" timeDelta="14" timeBase="25" countDelta="0" countBase="1">
        <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="6" timeBase="11" countDelta="0" countBase="1"/>
        <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAg" methodSignature="(Ljava/lang/String;)Ljason/infra/centralised/CentralisedAgArch;" timeDelta="3" timeBase="2" countDelta="0" countBase="1">
          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
        </node>
        <node leaf="true" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getRunner" methodSignature="()Ljason/infra/centralised/BaseCentralisedMAS;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
      </node>
      <node leaf="true" class="java.util.ArrayList" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="3" timeBase="6" countDelta="0" countBase="1"/>
      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="3" timeBase="0" countDelta="2" countBase="0"/>
      <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
      <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(Ljava/util/Collection;)V" timeDelta="-4" timeBase="50" countDelta="0" countBase="1"/>
    </node>
    <node leaf="true" class="javax.management.MBeanServer" methodName="unregisterMBean" methodSignature="(Ljavax/management/ObjectName;)V" timeDelta="57" timeBase="111" countDelta="0" countBase="1"/>
    <node leaf="true" class="java.io.File" methodName="delete" methodSignature="()Z" timeDelta="8" timeBase="326" countDelta="0" countBase="1"/>
    <node leaf="true" class="javax.management.ObjectName" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="1" timeBase="23" countDelta="0" countBase="1"/>
    <node leaf="true" class="java.io.File" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="-1" timeBase="10" countDelta="0" countBase="1"/>
    <node leaf="true" class="java.io.File" methodName="exists" methodSignature="()Z" timeDelta="-1" timeBase="34" countDelta="0" countBase="1"/>
    <node leaf="true" class="java.io.PrintStream" methodName="flush" methodSignature="()V" timeDelta="-6" timeBase="17" countDelta="0" countBase="2"/>
    <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="stop" methodSignature="()V" timeDelta="-8" timeBase="171" countDelta="0" countBase="1">
      <node leaf="false" class="jason.environment.Environment" methodName="stop" methodSignature="()V" timeDelta="-9" timeBase="165" countDelta="0" countBase="1">
        <node leaf="true" class="java.util.concurrent.ExecutorService" methodName="shutdownNow" methodSignature="()Ljava/util/List;" timeDelta="-11" timeBase="165" countDelta="0" countBase="1"/>
      </node>
    </node>
    <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="close" methodSignature="()V" timeDelta="-1770" timeBase="7734" countDelta="0" countBase="1">
      <node leaf="true" class="java.io.FileWriter" methodName="write" methodSignature="(I)V" timeDelta="8" timeBase="35" countDelta="0" countBase="1"/>
      <node leaf="true" class="java.io.FileWriter" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" timeDelta="3" timeBase="276" countDelta="0" countBase="1"/>
      <node leaf="true" class="jason.runtime.MASConsoleGUI" methodName="setPause" methodSignature="(Z)V" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
      <node leaf="false" class="jason.runtime.OutputStreamAdapter" methodName="restoreOriginalOut" methodSignature="()V" timeDelta="-1" timeBase="11" countDelta="0" countBase="1">
        <node leaf="true" class="java.lang.System" methodName="setOut" methodSignature="(Ljava/io/PrintStream;)V" timeDelta="-1" timeBase="6" countDelta="0" countBase="1"/>
      </node>
      <node leaf="true" class="java.io.FileWriter" methodName="close" methodSignature="()V" timeDelta="-21" timeBase="250" countDelta="0" countBase="1"/>
      <node leaf="true" class="javax.swing.JFrame" methodName="setVisible" methodSignature="(Z)V" timeDelta="-1754" timeBase="7090" countDelta="0" countBase="1"/>
    </node>
  </node>
  <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="run" methodSignature="()V" timeDelta="-2839" timeBase="187123" countDelta="0" countBase="1">
    <node leaf="true" class="java.util.logging.Logger" methodName="fine" methodSignature="(Ljava/lang/String;)V" timeDelta="3" timeBase="10" countDelta="0" countBase="1"/>
    <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="canSleep" methodSignature="()Z" timeDelta="-1" timeBase="6" countDelta="0" countBase="51"/>
    <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="reasoningCycle" methodSignature="()V" timeDelta="-54" timeBase="3629" countDelta="0" countBase="51">
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="deliberate" methodSignature="()V" timeDelta="5" timeBase="105" countDelta="0" countBase="51">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="deliberate" methodSignature="()V" timeDelta="128" timeBase="2473" countDelta="0" countBase="2">
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleDeliberate" methodSignature="()V" timeDelta="43" timeBase="821" countDelta="0" countBase="6">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyAddIM" methodSignature="()V" timeDelta="218" timeBase="4539" countDelta="0" countBase="1">
              <node leaf="false" class="jason.asSemantics.Intention" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="175" timeBase="3227" countDelta="0" countBase="1">
                <node leaf="true" class="jason.asSemantics.Circumstance$IntentionPlace" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="9" timeBase="38" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.concurrent.atomic.AtomicInteger" methodName="incrementAndGet" methodSignature="()I" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.ArrayDeque" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-2" timeBase="5" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="&lt;init&gt;" methodSignature="(Ljason/asSemantics/Option;Ljason/asSyntax/Trigger;)V" timeDelta="2" timeBase="62" countDelta="0" countBase="1">
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Trigger;" timeDelta="1" timeBase="47" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" timeDelta="2" timeBase="40" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" timeDelta="2" timeBase="40" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" timeDelta="2" timeBase="38" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="22" countDelta="0" countBase="1">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-1" timeBase="11" countDelta="0" countBase="1">
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" timeDelta="1" timeBase="10" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="push" methodSignature="(Ljason/asSemantics/IntendedMeans;)V" timeDelta="1" timeBase="13" countDelta="0" countBase="1">
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isAtomic" methodSignature="()Z" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.asSyntax.Plan" methodName="isAtomic" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                </node>
                <node leaf="true" class="java.util.Deque" methodName="push" methodSignature="(Ljava/lang/Object;)V" timeDelta="1" timeBase="6" countDelta="0" countBase="1"/>
              </node>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAchvGoal" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="1"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelPl" methodSignature="()V" timeDelta="25" timeBase="251" countDelta="0" countBase="1">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="relevantPlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" timeDelta="25" timeBase="247" countDelta="0" countBase="1">
                <node leaf="false" class="jason.asSyntax.Plan" methodName="isRelevant" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Unifier;)Ljason/asSemantics/Unifier;" timeDelta="5" timeBase="40" countDelta="0" countBase="2">
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSyntax/Trigger;)Z" timeDelta="6" timeBase="34" countDelta="0" countBase="2">
                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" timeDelta="6" timeBase="30" countDelta="0" countBase="2">
                      <node leaf="true" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" timeDelta="2" timeBase="22" countDelta="0" countBase="2"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="clone" methodSignature="()Ljason/asSyntax/Trigger;" timeDelta="4" timeBase="25" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="2" timeBase="18" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="1" timeBase="17" countDelta="0" countBase="1">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="2" timeBase="16" countDelta="0" countBase="1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="15" countDelta="0" countBase="1">
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="14" countDelta="0" countBase="1">
                            <node leaf="true" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" timeDelta="2" timeBase="18" countDelta="0" countBase="1">
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="1" timeBase="9" countDelta="0" countBase="1">
                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                  </node>
                  <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="5" countDelta="0" countBase="1">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="3" countDelta="0" countBase="1">
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="1" countDelta="-2" countBase="2"/>
                <node leaf="true" class="java.util.LinkedList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="4" countDelta="0" countBase="1"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyApplPl" methodSignature="()V" timeDelta="10" timeBase="64" countDelta="0" countBase="1">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applicablePlans" methodSignature="(Ljava/util/List;)Ljava/util/List;" timeDelta="9" timeBase="59" countDelta="0" countBase="1">
                <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" timeDelta="3" timeBase="29" countDelta="0" countBase="1">
                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" timeDelta="2" timeBase="2" countDelta="0" countBase="1"/>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                </node>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="0" countBase="4"/>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="3" countDelta="0" countBase="1"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getUnifier" methodSignature="()Ljason/asSemantics/Unifier;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="getContext" methodSignature="()Ljason/asSyntax/LogicalFormula;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelEv" methodSignature="()V" timeDelta="2" timeBase="17" countDelta="0" countBase="2">
              <node leaf="false" class="SaviAgentBrain" methodName="selectEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" timeDelta="2" timeBase="15" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.Queue" methodName="size" methodSignature="()I" timeDelta="1" timeBase="5" countDelta="0" countBase="1"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="hasCustomSelectOption" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="2"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
            </node>
            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="applySelAppl" methodSignature="()V" timeDelta="-1" timeBase="28" countDelta="0" countBase="1"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="2" countDelta="0" countBase="2"/>
        </node>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="()V" timeDelta="-1" timeBase="40" countDelta="0" countBase="51">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="act" methodSignature="()V" timeDelta="-14" timeBase="686" countDelta="0" countBase="2">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addPendingAction" methodSignature="(Ljason/asSemantics/ActionExec;)V" timeDelta="3" timeBase="25" countDelta="0" countBase="1">
            <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="2" timeBase="7" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleAct" methodSignature="()V" timeDelta="2" timeBase="57" countDelta="0" countBase="6">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyExecInt" methodSignature="()V" timeDelta="12" timeBase="213" countDelta="0" countBase="1">
              <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" timeDelta="11" timeBase="4" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" timeDelta="13" timeBase="2" countDelta="0" countBase="1"/>
              </node>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" timeDelta="1" timeBase="4" countDelta="0" countBase="1"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" timeDelta="1" timeBase="13" countDelta="0" countBase="1"/>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" timeDelta="-10" timeBase="16" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" timeDelta="-10" timeBase="16" countDelta="0" countBase="1"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyProcAct" methodSignature="()V" timeDelta="1" timeBase="52" countDelta="0" countBase="2">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="2">
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyClrInt" methodSignature="(Ljason/asSemantics/Intention;)V" timeDelta="1" timeBase="40" countDelta="0" countBase="1">
                <node leaf="true" class="jason.asSemantics.Intention" methodName="pop" methodSignature="()Ljason/asSemantics/IntendedMeans;" timeDelta="1" timeBase="7" countDelta="0" countBase="1"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAddition" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Agent" methodName="selectAction" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/ActionExec;" timeDelta="-1" timeBase="6" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" timeDelta="1" timeBase="2" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removePendingAction" methodSignature="(I)Ljason/asSemantics/ActionExec;" timeDelta="-1" timeBase="10" countDelta="0" countBase="1">
                <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="-1" timeBase="8" countDelta="0" countBase="1"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="removeActionReQueue" methodSignature="(Ljason/asSemantics/Intention;)V" timeDelta="-2" timeBase="23" countDelta="0" countBase="1">
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="9" countDelta="0" countBase="1">
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="1" countDelta="-1" countBase="1"/>
                </node>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="(Ljason/asSemantics/ActionExec;)V" timeDelta="-45" timeBase="980" countDelta="0" countBase="1">
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" timeDelta="1" timeBase="0" countDelta="1" countBase="0"/>
            <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="act" methodSignature="(Ljava/lang/String;Ljason/asSemantics/ActionExec;)V" timeDelta="-46" timeBase="975" countDelta="0" countBase="1">
              <node leaf="false" class="jason.environment.Environment" methodName="scheduleAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" timeDelta="-47" timeBase="970" countDelta="0" countBase="1">
                <node leaf="true" class="jason.environment.Environment$1" methodName="&lt;init&gt;" methodSignature="(Ljason/environment/Environment;Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" timeDelta="1" timeBase="10" countDelta="0" countBase="1"/>
                <node leaf="true" class="java.util.concurrent.ExecutorService" methodName="execute" methodSignature="(Ljava/lang/Runnable;)V" timeDelta="-61" timeBase="455" countDelta="0" countBase="1"/>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="sense" methodSignature="()V" timeDelta="-59" timeBase="3478" countDelta="0" countBase="51">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="sense" methodSignature="()V" timeDelta="-58" timeBase="3474" countDelta="0" countBase="51">
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleSense" methodSignature="()V" timeDelta="41" timeBase="24" countDelta="0" countBase="51">
            <node leaf="true" class="jason.asSemantics.TransitionSystem$3" methodName="&lt;clinit&gt;" methodSignature="()V" timeDelta="-9" timeBase="64" countDelta="0" countBase="1"/>
          </node>
          <node leaf="false" class="jason.asSemantics.Agent" methodName="buf" methodSignature="(Ljava/util/Collection;)I" timeDelta="6" timeBase="178" countDelta="0" countBase="51">
            <node leaf="false" class="java.util.Iterator" methodName="remove" methodSignature="()V" timeDelta="8" timeBase="49" countDelta="0" countBase="5">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="remove" methodSignature="()V" timeDelta="7" timeBase="47" countDelta="0" countBase="5">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="delAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="3" timeBase="9" countDelta="0" countBase="5">
                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" timeDelta="3" timeBase="7" countDelta="0" countBase="5"/>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="removeFromEntry" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="3" timeBase="29" countDelta="0" countBase="5">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" timeDelta="1" timeBase="4" countDelta="0" countBase="5">
                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" timeDelta="2" timeBase="1" countDelta="0" countBase="5">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="5"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="isEmpty" methodSignature="()Z" timeDelta="1" timeBase="1" countDelta="0" countBase="5"/>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="remove" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="16" countDelta="0" countBase="5">
                    <node leaf="true" class="java.util.Deque" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="5" countDelta="0" countBase="5"/>
                    <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" timeDelta="1" timeBase="8" countDelta="0" countBase="5">
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="2" countDelta="0" countBase="5">
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="1" countDelta="0" countBase="5"/>
                      </node>
                    </node>
                    <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-2" timeBase="2" countDelta="0" countBase="5"/>
                  </node>
                </node>
                <node leaf="true" class="java.util.Iterator" methodName="remove" methodSignature="()V" timeDelta="-1" timeBase="3" countDelta="0" countBase="5"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" timeDelta="4" timeBase="11" countDelta="0" countBase="5">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" timeDelta="5" timeBase="10" countDelta="0" countBase="5">
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="3" timeBase="7" countDelta="0" countBase="5">
                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="0" countDelta="0" countBase="5"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="-1" timeBase="1" countDelta="0" countBase="5"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="java.util.Set" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" timeDelta="2" timeBase="19" countDelta="0" countBase="250">
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="2" timeBase="17" countDelta="0" countBase="245">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" timeDelta="2" timeBase="17" countDelta="0" countBase="245">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="2" timeBase="16" countDelta="0" countBase="245">
                    <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="7" countDelta="0" countBase="147">
                      <node leaf="true" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" timeDelta="1" timeBase="6" countDelta="0" countBase="147"/>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="true" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" timeDelta="1" timeBase="3" countDelta="0" countBase="10"/>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="(Ljason/asSemantics/Event;)V" timeDelta="-1" timeBase="14" countDelta="0" countBase="5">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" timeDelta="-1" timeBase="11" countDelta="0" countBase="5">
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" timeDelta="-1" timeBase="10" countDelta="0" countBase="5">
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" timeDelta="-1" timeBase="7" countDelta="0" countBase="5"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" timeDelta="-1" timeBase="14" countDelta="0" countBase="5">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" timeDelta="-1" timeBase="13" countDelta="0" countBase="5">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="13" countDelta="0" countBase="5">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="12" countDelta="0" countBase="5">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="11" countDelta="0" countBase="5">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="10" countDelta="0" countBase="5">
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" timeDelta="-1" timeBase="1" countDelta="0" countBase="5"/>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-1" timeBase="10" countDelta="0" countBase="5">
              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="-1" timeBase="2" countDelta="0" countBase="5"/>
              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" timeDelta="-1" timeBase="2" countDelta="0" countBase="5"/>
            </node>
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getPercepts" methodSignature="()Ljava/util/Iterator;" timeDelta="-3" timeBase="19" countDelta="0" countBase="51">
              <node leaf="true" class="jason.bb.DefaultBeliefBase$1" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljava/util/Iterator;)V" timeDelta="1" timeBase="0" countDelta="0" countBase="51"/>
              <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="-1" timeBase="2" countDelta="0" countBase="51"/>
            </node>
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;)Z" timeDelta="-8" timeBase="74" countDelta="0" countBase="5">
              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)Z" timeDelta="-7" timeBase="73" countDelta="0" countBase="5">
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="provideBelEntry" methodSignature="(Ljason/asSyntax/Literal;)Ljason/bb/DefaultBeliefBase$BelEntry;" timeDelta="-2" timeBase="10" countDelta="0" countBase="5">
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" timeDelta="-1" timeBase="1" countDelta="0" countBase="5"/>
                  <node leaf="true" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;)V" timeDelta="-1" timeBase="3" countDelta="0" countBase="5"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" timeDelta="-6" timeBase="29" countDelta="0" countBase="5">
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" timeDelta="-1" timeBase="2" countDelta="0" countBase="5"/>
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" timeDelta="-5" timeBase="20" countDelta="0" countBase="5">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" timeDelta="-4" timeBase="19" countDelta="0" countBase="5">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" timeDelta="-1" timeBase="8" countDelta="0" countBase="5">
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" timeDelta="-2" timeBase="8" countDelta="0" countBase="5"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isNumeric" methodSignature="()Z" timeDelta="-1" timeBase="1" countDelta="0" countBase="5"/>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="perceive" methodSignature="()Ljava/util/Collection;" timeDelta="-105" timeBase="3249" countDelta="0" countBase="51">
            <node leaf="false" class="DebugEnvironment" methodName="getPercepts" methodSignature="(Ljava/lang/String;)Ljava/util/Collection;" timeDelta="-104" timeBase="3240" countDelta="0" countBase="51">
              <node leaf="false" class="jason.asSyntax.Literal" methodName="parseLiteral" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Literal;" timeDelta="1" timeBase="306" countDelta="0" countBase="250">
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;)V" timeDelta="2" timeBase="59" countDelta="0" countBase="250">
                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;II)V" timeDelta="1" timeBase="23" countDelta="0" countBase="250">
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;III)V" timeDelta="1" timeBase="22" countDelta="0" countBase="250"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/as2j$1;)V" timeDelta="1" timeBase="6" countDelta="0" countBase="250"/>
                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/SimpleCharStream;)V" timeDelta="1" timeBase="0" countDelta="0" countBase="250"/>
                </node>
              </node>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" timeDelta="1" timeBase="2" countDelta="0" countBase="51"/>
              <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" timeDelta="1" timeBase="0" countDelta="0" countBase="51"/>
              <node leaf="true" class="java.lang.String" methodName="split" methodSignature="(Ljava/lang/String;)[Ljava/lang/String;" timeDelta="-3" timeBase="140" countDelta="0" countBase="50"/>
              <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-10" timeBase="88" countDelta="0" countBase="250">
                <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-11" timeBase="88" countDelta="0" countBase="250">
                  <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" timeDelta="-1" timeBase="3" countDelta="0" countBase="250"/>
                  <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" timeDelta="-10" timeBase="69" countDelta="0" countBase="250">
                    <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-16" timeBase="58" countDelta="0" countBase="150">
                      <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" timeDelta="-8" timeBase="26" countDelta="0" countBase="300">
                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="toString" methodSignature="()Ljava/lang/String;" timeDelta="-16" timeBase="49" countDelta="0" countBase="150">
                          <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(D)Ljava/lang/String;" timeDelta="-16" timeBase="48" countDelta="0" countBase="150"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="java.util.logging.Logger" methodName="info" methodSignature="(Ljava/lang/String;)V" timeDelta="-12" timeBase="199" countDelta="0" countBase="251">
                <node leaf="false" class="jason.runtime.MASConsoleLogHandler" methodName="publish" methodSignature="(Ljava/util/logging/LogRecord;)V" timeDelta="-11" timeBase="143" countDelta="0" countBase="251">
                  <node leaf="false" class="jason.runtime.MASConsoleGUI" methodName="append" methodSignature="(Ljava/lang/String;Ljava/lang/String;)V" timeDelta="-11" timeBase="133" countDelta="0" countBase="251">
                    <node leaf="true" class="javax.swing.JTextArea" methodName="append" methodSignature="(Ljava/lang/String;)V" timeDelta="-11" timeBase="129" countDelta="0" countBase="251"/>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
</tree>